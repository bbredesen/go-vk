//go:build darwin
// Code generated by go-vk from vk-1.2.203.xml at 2023-03-16 13:28:32.489654 -0600 MDT m=+2.519859259. DO NOT EDIT.

package vk

import "unsafe"

const (
	keyvkCreateMacOSSurfaceMVK vkCommandKey = iota + 463
)

func init() {
	lazyCommands[keyvkCreateMacOSSurfaceMVK] = vkCommand{"vkCreateMacOSSurfaceMVK", 4, true, nil}
}

// CreateMacOSSurfaceMVK: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/vkCreateMacOSSurfaceMVK.html
func CreateMacOSSurfaceMVK(instance Instance, createInfo *MacOSSurfaceCreateInfoMVK, allocator *AllocationCallbacks) (r Result, surface SurfaceKHR) {
	// Parameter is a singular input, requires translation - createInfo
	var pCreateInfo *_vkMacOSSurfaceCreateInfoMVK
	if createInfo != nil {
		pCreateInfo = createInfo.Vulkanize()
	}

	// Parameter is a singular input, pass direct - allocator
	var pAllocator unsafe.Pointer
	if allocator != nil {
		pAllocator = unsafe.Pointer(allocator)
	}

	// surface is a binding-allocated single return value and will be populated by Vulkan
	ptr_pSurface := &surface

	r = Result(execTrampoline(keyvkCreateMacOSSurfaceMVK, uintptr(instance), uintptr(unsafe.Pointer(pCreateInfo)), uintptr(unsafe.Pointer(pAllocator)), uintptr(unsafe.Pointer(ptr_pSurface))))

	return
}
