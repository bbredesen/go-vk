// Code generated by "stringer -output=enum_string_7.go -type=ToolPurposeFlagBits,ValidationCacheHeaderVersionEXT,ValidationCheckEXT,ValidationFeatureDisableEXT,ValidationFeatureEnableEXT,VendorId,VertexInputRate,VideoCapabilityFlagBitsKHR,VideoChromaSubsamplingFlagBitsKHR,VideoCodecOperationFlagBitsKHR,VideoCodingControlFlagBitsKHR,VideoComponentBitDepthFlagBitsKHR,VideoDecodeCapabilityFlagBitsKHR,VideoDecodeH264PictureLayoutFlagBitsKHR,VideoDecodeUsageFlagBitsKHR,VideoSessionCreateFlagBitsKHR,ViewportCoordinateSwizzleNV"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOOL_PURPOSE_VALIDATION_BIT-1]
	_ = x[TOOL_PURPOSE_PROFILING_BIT-2]
	_ = x[TOOL_PURPOSE_TRACING_BIT-4]
	_ = x[TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT-8]
	_ = x[TOOL_PURPOSE_MODIFYING_FEATURES_BIT-16]
	_ = x[TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT-1000245000]
	_ = x[TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT-1000245000]
	_ = x[TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT-8]
	_ = x[TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT-16]
	_ = x[TOOL_PURPOSE_PROFILING_BIT_EXT-2]
	_ = x[TOOL_PURPOSE_TRACING_BIT_EXT-4]
	_ = x[TOOL_PURPOSE_VALIDATION_BIT_EXT-1]
}

const (
	_ToolPurposeFlagBits_name_0 = "TOOL_PURPOSE_VALIDATION_BITTOOL_PURPOSE_PROFILING_BIT"
	_ToolPurposeFlagBits_name_1 = "TOOL_PURPOSE_TRACING_BIT"
	_ToolPurposeFlagBits_name_2 = "TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"
	_ToolPurposeFlagBits_name_3 = "TOOL_PURPOSE_MODIFYING_FEATURES_BIT"
	_ToolPurposeFlagBits_name_4 = "TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"
)

var (
	_ToolPurposeFlagBits_index_0 = [...]uint8{0, 27, 53}
)

func (i ToolPurposeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ToolPurposeFlagBits_name_0[_ToolPurposeFlagBits_index_0[i]:_ToolPurposeFlagBits_index_0[i+1]]
	case i == 4:
		return _ToolPurposeFlagBits_name_1
	case i == 8:
		return _ToolPurposeFlagBits_name_2
	case i == 16:
		return _ToolPurposeFlagBits_name_3
	case i == 1000245000:
		return _ToolPurposeFlagBits_name_4
	default:
		return "ToolPurposeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_CACHE_HEADER_VERSION_ONE_EXT-1]
}

const _ValidationCacheHeaderVersionEXT_name = "VALIDATION_CACHE_HEADER_VERSION_ONE_EXT"

var _ValidationCacheHeaderVersionEXT_index = [...]uint8{0, 39}

func (i ValidationCacheHeaderVersionEXT) String() string {
	i -= 1
	if i < 0 || i >= ValidationCacheHeaderVersionEXT(len(_ValidationCacheHeaderVersionEXT_index)-1) {
		return "ValidationCacheHeaderVersionEXT(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ValidationCacheHeaderVersionEXT_name[_ValidationCacheHeaderVersionEXT_index[i]:_ValidationCacheHeaderVersionEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_CHECK_ALL_EXT-0]
	_ = x[VALIDATION_CHECK_SHADERS_EXT-1]
}

const _ValidationCheckEXT_name = "VALIDATION_CHECK_ALL_EXTVALIDATION_CHECK_SHADERS_EXT"

var _ValidationCheckEXT_index = [...]uint8{0, 24, 52}

func (i ValidationCheckEXT) String() string {
	if i < 0 || i >= ValidationCheckEXT(len(_ValidationCheckEXT_index)-1) {
		return "ValidationCheckEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValidationCheckEXT_name[_ValidationCheckEXT_index[i]:_ValidationCheckEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_FEATURE_DISABLE_ALL_EXT-0]
	_ = x[VALIDATION_FEATURE_DISABLE_SHADERS_EXT-1]
	_ = x[VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT-2]
	_ = x[VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT-3]
	_ = x[VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT-4]
	_ = x[VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT-5]
	_ = x[VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT-6]
	_ = x[VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT-7]
}

const _ValidationFeatureDisableEXT_name = "VALIDATION_FEATURE_DISABLE_ALL_EXTVALIDATION_FEATURE_DISABLE_SHADERS_EXTVALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXTVALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXTVALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXTVALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXTVALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXTVALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT"

var _ValidationFeatureDisableEXT_index = [...]uint16{0, 34, 72, 116, 161, 208, 250, 295, 349}

func (i ValidationFeatureDisableEXT) String() string {
	if i < 0 || i >= ValidationFeatureDisableEXT(len(_ValidationFeatureDisableEXT_index)-1) {
		return "ValidationFeatureDisableEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValidationFeatureDisableEXT_name[_ValidationFeatureDisableEXT_index[i]:_ValidationFeatureDisableEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT-0]
	_ = x[VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT-1]
	_ = x[VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT-2]
	_ = x[VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT-3]
	_ = x[VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT-4]
}

const _ValidationFeatureEnableEXT_name = "VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXTVALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXTVALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXTVALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXTVALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT"

var _ValidationFeatureEnableEXT_index = [...]uint8{0, 42, 105, 149, 191, 247}

func (i ValidationFeatureEnableEXT) String() string {
	if i < 0 || i >= ValidationFeatureEnableEXT(len(_ValidationFeatureEnableEXT_index)-1) {
		return "ValidationFeatureEnableEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValidationFeatureEnableEXT_name[_ValidationFeatureEnableEXT_index[i]:_ValidationFeatureEnableEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VENDOR_ID_VIV-65537]
	_ = x[VENDOR_ID_VSI-65538]
	_ = x[VENDOR_ID_KAZAN-65539]
	_ = x[VENDOR_ID_CODEPLAY-65540]
	_ = x[VENDOR_ID_MESA-65541]
	_ = x[VENDOR_ID_POCL-65542]
	_ = x[VENDOR_ID_MOBILEYE-65543]
}

const _VendorId_name = "VENDOR_ID_VIVVENDOR_ID_VSIVENDOR_ID_KAZANVENDOR_ID_CODEPLAYVENDOR_ID_MESAVENDOR_ID_POCLVENDOR_ID_MOBILEYE"

var _VendorId_index = [...]uint8{0, 13, 26, 41, 59, 73, 87, 105}

func (i VendorId) String() string {
	i -= 65537
	if i < 0 || i >= VendorId(len(_VendorId_index)-1) {
		return "VendorId(" + strconv.FormatInt(int64(i+65537), 10) + ")"
	}
	return _VendorId_name[_VendorId_index[i]:_VendorId_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VERTEX_INPUT_RATE_VERTEX-0]
	_ = x[VERTEX_INPUT_RATE_INSTANCE-1]
}

const _VertexInputRate_name = "VERTEX_INPUT_RATE_VERTEXVERTEX_INPUT_RATE_INSTANCE"

var _VertexInputRate_index = [...]uint8{0, 24, 50}

func (i VertexInputRate) String() string {
	if i < 0 || i >= VertexInputRate(len(_VertexInputRate_index)-1) {
		return "VertexInputRate(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VertexInputRate_name[_VertexInputRate_index[i]:_VertexInputRate_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR-1]
	_ = x[VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR-2]
}

const _VideoCapabilityFlagBitsKHR_name = "VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHRVIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR"

var _VideoCapabilityFlagBitsKHR_index = [...]uint8{0, 42, 92}

func (i VideoCapabilityFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoCapabilityFlagBitsKHR(len(_VideoCapabilityFlagBitsKHR_index)-1) {
		return "VideoCapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoCapabilityFlagBitsKHR_name[_VideoCapabilityFlagBitsKHR_index[i]:_VideoCapabilityFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR-0]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR-1]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR-2]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR-4]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR-8]
}

const (
	_VideoChromaSubsamplingFlagBitsKHR_name_0 = "VIDEO_CHROMA_SUBSAMPLING_INVALID_KHRVIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHRVIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR"
	_VideoChromaSubsamplingFlagBitsKHR_name_1 = "VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR"
	_VideoChromaSubsamplingFlagBitsKHR_name_2 = "VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR"
)

var (
	_VideoChromaSubsamplingFlagBitsKHR_index_0 = [...]uint8{0, 36, 79, 115}
)

func (i VideoChromaSubsamplingFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoChromaSubsamplingFlagBitsKHR_name_0[_VideoChromaSubsamplingFlagBitsKHR_index_0[i]:_VideoChromaSubsamplingFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoChromaSubsamplingFlagBitsKHR_name_1
	case i == 8:
		return _VideoChromaSubsamplingFlagBitsKHR_name_2
	default:
		return "VideoChromaSubsamplingFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CODEC_OPERATION_NONE_KHR-0]
	_ = x[VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR-1000040000]
	_ = x[VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR-1000187000]
}

const (
	_VideoCodecOperationFlagBitsKHR_name_0 = "VIDEO_CODEC_OPERATION_NONE_KHR"
	_VideoCodecOperationFlagBitsKHR_name_1 = "VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR"
	_VideoCodecOperationFlagBitsKHR_name_2 = "VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR"
)

func (i VideoCodecOperationFlagBitsKHR) String() string {
	switch {
	case i == 0:
		return _VideoCodecOperationFlagBitsKHR_name_0
	case i == 1000040000:
		return _VideoCodecOperationFlagBitsKHR_name_1
	case i == 1000187000:
		return _VideoCodecOperationFlagBitsKHR_name_2
	default:
		return "VideoCodecOperationFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CODING_CONTROL_RESET_BIT_KHR-1]
}

const _VideoCodingControlFlagBitsKHR_name = "VIDEO_CODING_CONTROL_RESET_BIT_KHR"

var _VideoCodingControlFlagBitsKHR_index = [...]uint8{0, 34}

func (i VideoCodingControlFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoCodingControlFlagBitsKHR(len(_VideoCodingControlFlagBitsKHR_index)-1) {
		return "VideoCodingControlFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoCodingControlFlagBitsKHR_name[_VideoCodingControlFlagBitsKHR_index[i]:_VideoCodingControlFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR-0]
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR-1]
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR-4]
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR-16]
}

const (
	_VideoComponentBitDepthFlagBitsKHR_name_0 = "VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHRVIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR"
	_VideoComponentBitDepthFlagBitsKHR_name_1 = "VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR"
	_VideoComponentBitDepthFlagBitsKHR_name_2 = "VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR"
)

var (
	_VideoComponentBitDepthFlagBitsKHR_index_0 = [...]uint8{0, 37, 72}
)

func (i VideoComponentBitDepthFlagBitsKHR) String() string {
	switch {
	case i <= 1:
		return _VideoComponentBitDepthFlagBitsKHR_name_0[_VideoComponentBitDepthFlagBitsKHR_index_0[i]:_VideoComponentBitDepthFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoComponentBitDepthFlagBitsKHR_name_1
	case i == 16:
		return _VideoComponentBitDepthFlagBitsKHR_name_2
	default:
		return "VideoComponentBitDepthFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR-1]
	_ = x[VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR-2]
}

const _VideoDecodeCapabilityFlagBitsKHR_name = "VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHRVIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR"

var _VideoDecodeCapabilityFlagBitsKHR_index = [...]uint8{0, 55, 110}

func (i VideoDecodeCapabilityFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoDecodeCapabilityFlagBitsKHR(len(_VideoDecodeCapabilityFlagBitsKHR_index)-1) {
		return "VideoDecodeCapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoDecodeCapabilityFlagBitsKHR_name[_VideoDecodeCapabilityFlagBitsKHR_index[i]:_VideoDecodeCapabilityFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR-0]
	_ = x[VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR-1]
	_ = x[VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR-2]
}

const _VideoDecodeH264PictureLayoutFlagBitsKHR_name = "VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHRVIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHRVIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR"

var _VideoDecodeH264PictureLayoutFlagBitsKHR_index = [...]uint8{0, 48, 117, 184}

func (i VideoDecodeH264PictureLayoutFlagBitsKHR) String() string {
	if i >= VideoDecodeH264PictureLayoutFlagBitsKHR(len(_VideoDecodeH264PictureLayoutFlagBitsKHR_index)-1) {
		return "VideoDecodeH264PictureLayoutFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VideoDecodeH264PictureLayoutFlagBitsKHR_name[_VideoDecodeH264PictureLayoutFlagBitsKHR_index[i]:_VideoDecodeH264PictureLayoutFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_DECODE_USAGE_DEFAULT_KHR-0]
	_ = x[VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR-1]
	_ = x[VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR-2]
	_ = x[VIDEO_DECODE_USAGE_STREAMING_BIT_KHR-4]
}

const (
	_VideoDecodeUsageFlagBitsKHR_name_0 = "VIDEO_DECODE_USAGE_DEFAULT_KHRVIDEO_DECODE_USAGE_TRANSCODING_BIT_KHRVIDEO_DECODE_USAGE_OFFLINE_BIT_KHR"
	_VideoDecodeUsageFlagBitsKHR_name_1 = "VIDEO_DECODE_USAGE_STREAMING_BIT_KHR"
)

var (
	_VideoDecodeUsageFlagBitsKHR_index_0 = [...]uint8{0, 30, 68, 102}
)

func (i VideoDecodeUsageFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoDecodeUsageFlagBitsKHR_name_0[_VideoDecodeUsageFlagBitsKHR_index_0[i]:_VideoDecodeUsageFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoDecodeUsageFlagBitsKHR_name_1
	default:
		return "VideoDecodeUsageFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR-1]
}

const _VideoSessionCreateFlagBitsKHR_name = "VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR"

var _VideoSessionCreateFlagBitsKHR_index = [...]uint8{0, 46}

func (i VideoSessionCreateFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoSessionCreateFlagBitsKHR(len(_VideoSessionCreateFlagBitsKHR_index)-1) {
		return "VideoSessionCreateFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoSessionCreateFlagBitsKHR_name[_VideoSessionCreateFlagBitsKHR_index[i]:_VideoSessionCreateFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV-0]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV-1]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV-2]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV-3]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV-4]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV-5]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV-6]
	_ = x[VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV-7]
}

const _ViewportCoordinateSwizzleNV_name = "VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NVVIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NVVIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NVVIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NVVIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NVVIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NVVIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NVVIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV"

var _ViewportCoordinateSwizzleNV_index = [...]uint16{0, 41, 82, 123, 164, 205, 246, 287, 328}

func (i ViewportCoordinateSwizzleNV) String() string {
	if i < 0 || i >= ViewportCoordinateSwizzleNV(len(_ViewportCoordinateSwizzleNV_index)-1) {
		return "ViewportCoordinateSwizzleNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ViewportCoordinateSwizzleNV_name[_ViewportCoordinateSwizzleNV_index[i]:_ViewportCoordinateSwizzleNV_index[i+1]]
}
