//go:build darwin
// Code generated by go-vk from vk-1.2.203.xml at 2023-03-16 13:28:32.218624 -0600 MDT m=+2.248830417. DO NOT EDIT.

package vk

import "unsafe"

const (
	keyvkCreateMetalSurfaceEXT vkCommandKey = iota + 447
)

func init() {
	lazyCommands[keyvkCreateMetalSurfaceEXT] = vkCommand{"vkCreateMetalSurfaceEXT", 4, true, nil}
}

// CreateMetalSurfaceEXT: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/vkCreateMetalSurfaceEXT.html
func CreateMetalSurfaceEXT(instance Instance, createInfo *MetalSurfaceCreateInfoEXT, allocator *AllocationCallbacks) (r Result, surface SurfaceKHR) {
	// Parameter is a singular input, requires translation - createInfo
	var pCreateInfo *_vkMetalSurfaceCreateInfoEXT
	if createInfo != nil {
		pCreateInfo = createInfo.Vulkanize()
	}

	// Parameter is a singular input, pass direct - allocator
	var pAllocator unsafe.Pointer
	if allocator != nil {
		pAllocator = unsafe.Pointer(allocator)
	}

	// surface is a binding-allocated single return value and will be populated by Vulkan
	ptr_pSurface := &surface

	r = Result(execTrampoline(keyvkCreateMetalSurfaceEXT, uintptr(instance), uintptr(unsafe.Pointer(pCreateInfo)), uintptr(unsafe.Pointer(pAllocator)), uintptr(unsafe.Pointer(ptr_pSurface))))

	return
}
