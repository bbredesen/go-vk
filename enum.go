// Code generated by go-vk from vk.xml at 2023-01-14 15:10:03.2008169 -0600 CST m=+1.094261101. DO NOT EDIT.
package vk

//go:generate stringer -output=enum_string_0.go -type=AccessFlagBits,AttachmentDescriptionFlagBits,AttachmentLoadOp,AttachmentStoreOp,BlendFactor,BlendOp,BorderColor,BufferCreateFlagBits,BufferUsageFlagBits,ChromaLocation,ColorComponentFlagBits,ColorSpaceKHR,CommandBufferLevel,CommandBufferResetFlagBits,CommandBufferUsageFlagBits,CommandPoolCreateFlagBits,CommandPoolResetFlagBits,CompareOp,ComponentSwizzle,CompositeAlphaFlagBitsKHR,CullModeFlagBits,DependencyFlagBits,DescriptorPoolCreateFlagBits,DescriptorType,DescriptorUpdateTemplateType,DynamicState,ExternalFenceFeatureFlagBits,ExternalFenceHandleTypeFlagBits,ExternalMemoryFeatureFlagBits,ExternalMemoryHandleTypeFlagBits,ExternalSemaphoreFeatureFlagBits
//go:generate stringer -output=enum_string_1.go -type=ExternalSemaphoreHandleTypeFlagBits,FenceCreateFlagBits,FenceImportFlagBits,Filter,Format,FormatFeatureFlagBits,FrontFace,ImageAspectFlagBits,ImageCreateFlagBits,ImageLayout,ImageTiling,ImageType,ImageUsageFlagBits,ImageViewType,InternalAllocationType,LogicOp,MemoryAllocateFlagBits,MemoryHeapFlagBits,MemoryPropertyFlagBits,ObjectType,PeerMemoryFeatureFlagBits,PhysicalDeviceType,PipelineBindPoint,PipelineCacheHeaderVersion,PipelineCreateFlagBits,PipelineStageFlagBits,PointClippingBehavior,PolygonMode,PresentModeKHR,PrimitiveTopology,QueryControlFlagBits
//go:generate stringer -output=enum_string_2.go -type=QueryPipelineStatisticFlagBits,QueryResultFlagBits,QueryType,QueueFlagBits,Result,SampleCountFlagBits,SamplerAddressMode,SamplerMipmapMode,SamplerYcbcrModelConversion,SamplerYcbcrRange,SemaphoreImportFlagBits,ShaderStageFlagBits,SharingMode,SparseImageFormatFlagBits,SparseMemoryBindFlagBits,StencilOp,StructureType,SubgroupFeatureFlagBits,SurfaceTransformFlagBitsKHR,SystemAllocationScope,TessellationDomainOrigin,VendorId,VertexInputRate
type AccessFlagBits = AccessFlags

const (
	ACCESS_INDIRECT_COMMAND_READ_BIT          AccessFlagBits = 1 << 0
	ACCESS_INDEX_READ_BIT                                    = 1 << 1
	ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT                = 1 << 10
	ACCESS_TRANSFER_READ_BIT                                 = 1 << 11
	ACCESS_TRANSFER_WRITE_BIT                                = 1 << 12
	ACCESS_HOST_READ_BIT                                     = 1 << 13
	ACCESS_HOST_WRITE_BIT                                    = 1 << 14
	ACCESS_MEMORY_READ_BIT                                   = 1 << 15
	ACCESS_MEMORY_WRITE_BIT                                  = 1 << 16
	ACCESS_VERTEX_ATTRIBUTE_READ_BIT                         = 1 << 2
	ACCESS_UNIFORM_READ_BIT                                  = 1 << 3
	ACCESS_INPUT_ATTACHMENT_READ_BIT                         = 1 << 4
	ACCESS_SHADER_READ_BIT                                   = 1 << 5
	ACCESS_SHADER_WRITE_BIT                                  = 1 << 6
	ACCESS_COLOR_ATTACHMENT_READ_BIT                         = 1 << 7
	ACCESS_COLOR_ATTACHMENT_WRITE_BIT                        = 1 << 8
	ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT                 = 1 << 9
)

type AttachmentDescriptionFlagBits = AttachmentDescriptionFlags

const (
	ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT AttachmentDescriptionFlagBits = 1 << 0
)

// AttachmentLoadOp: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentLoadOp.html
type AttachmentLoadOp int32

const (
	ATTACHMENT_LOAD_OP_LOAD      AttachmentLoadOp = 0
	ATTACHMENT_LOAD_OP_CLEAR                      = 1
	ATTACHMENT_LOAD_OP_DONT_CARE                  = 2
)

// AttachmentStoreOp: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentStoreOp.html
type AttachmentStoreOp int32

const (
	ATTACHMENT_STORE_OP_STORE     AttachmentStoreOp = 0
	ATTACHMENT_STORE_OP_DONT_CARE                   = 1
)

// BlendFactor: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBlendFactor.html
type BlendFactor int32

const (
	BLEND_FACTOR_ZERO                     BlendFactor = 0
	BLEND_FACTOR_ONE                                  = 1
	BLEND_FACTOR_SRC_COLOR                            = 2
	BLEND_FACTOR_ONE_MINUS_SRC_COLOR                  = 3
	BLEND_FACTOR_DST_COLOR                            = 4
	BLEND_FACTOR_ONE_MINUS_DST_COLOR                  = 5
	BLEND_FACTOR_SRC_ALPHA                            = 6
	BLEND_FACTOR_ONE_MINUS_SRC_ALPHA                  = 7
	BLEND_FACTOR_DST_ALPHA                            = 8
	BLEND_FACTOR_ONE_MINUS_DST_ALPHA                  = 9
	BLEND_FACTOR_CONSTANT_COLOR                       = 10
	BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR             = 11
	BLEND_FACTOR_CONSTANT_ALPHA                       = 12
	BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA             = 13
	BLEND_FACTOR_SRC_ALPHA_SATURATE                   = 14
	BLEND_FACTOR_SRC1_COLOR                           = 15
	BLEND_FACTOR_ONE_MINUS_SRC1_COLOR                 = 16
	BLEND_FACTOR_SRC1_ALPHA                           = 17
	BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA                 = 18
)

// BlendOp: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBlendOp.html
type BlendOp int32

const (
	BLEND_OP_ADD              BlendOp = 0
	BLEND_OP_SUBTRACT                 = 1
	BLEND_OP_REVERSE_SUBTRACT         = 2
	BLEND_OP_MIN                      = 3
	BLEND_OP_MAX                      = 4
)

// BorderColor: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBorderColor.html
type BorderColor int32

const (
	BORDER_COLOR_FLOAT_TRANSPARENT_BLACK BorderColor = 0
	BORDER_COLOR_INT_TRANSPARENT_BLACK               = 1
	BORDER_COLOR_FLOAT_OPAQUE_BLACK                  = 2
	BORDER_COLOR_INT_OPAQUE_BLACK                    = 3
	BORDER_COLOR_FLOAT_OPAQUE_WHITE                  = 4
	BORDER_COLOR_INT_OPAQUE_WHITE                    = 5
)

type BufferCreateFlagBits = BufferCreateFlags

const (
	BUFFER_CREATE_SPARSE_BINDING_BIT   BufferCreateFlagBits = 1 << 0
	BUFFER_CREATE_SPARSE_RESIDENCY_BIT                      = 1 << 1
	BUFFER_CREATE_SPARSE_ALIASED_BIT                        = 1 << 2
)

type BufferUsageFlagBits = BufferUsageFlags

const (
	BUFFER_USAGE_TRANSFER_SRC_BIT         BufferUsageFlagBits = 1 << 0
	BUFFER_USAGE_TRANSFER_DST_BIT                             = 1 << 1
	BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT                     = 1 << 2
	BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT                     = 1 << 3
	BUFFER_USAGE_UNIFORM_BUFFER_BIT                           = 1 << 4
	BUFFER_USAGE_STORAGE_BUFFER_BIT                           = 1 << 5
	BUFFER_USAGE_INDEX_BUFFER_BIT                             = 1 << 6
	BUFFER_USAGE_VERTEX_BUFFER_BIT                            = 1 << 7
	BUFFER_USAGE_INDIRECT_BUFFER_BIT                          = 1 << 8
)

// ChromaLocation: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkChromaLocation.html
type ChromaLocation int32

const (
	CHROMA_LOCATION_COSITED_EVEN ChromaLocation = 0
	CHROMA_LOCATION_MIDPOINT                    = 1
)

type ColorComponentFlagBits = ColorComponentFlags

const (
	COLOR_COMPONENT_R_BIT ColorComponentFlagBits = 1 << 0
	COLOR_COMPONENT_G_BIT                        = 1 << 1
	COLOR_COMPONENT_B_BIT                        = 1 << 2
	COLOR_COMPONENT_A_BIT                        = 1 << 3
)

// ColorSpaceKHR: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkColorSpaceKHR.html
type ColorSpaceKHR int32

const (
	COLOR_SPACE_SRGB_NONLINEAR_KHR ColorSpaceKHR = 0
	// Backwards-compatible alias containing a typo
	COLORSPACE_SRGB_NONLINEAR_KHR = COLOR_SPACE_SRGB_NONLINEAR_KHR
)

// CommandBufferLevel: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferLevel.html
type CommandBufferLevel int32

const (
	COMMAND_BUFFER_LEVEL_PRIMARY   CommandBufferLevel = 0
	COMMAND_BUFFER_LEVEL_SECONDARY                    = 1
)

type CommandBufferResetFlagBits = CommandBufferResetFlags

const (
	COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT CommandBufferResetFlagBits = 1 << 0
)

type CommandBufferUsageFlagBits = CommandBufferUsageFlags

const (
	COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT      CommandBufferUsageFlagBits = 1 << 0
	COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT                            = 1 << 1
	COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT                                = 1 << 2
)

type CommandPoolCreateFlagBits = CommandPoolCreateFlags

const (
	COMMAND_POOL_CREATE_TRANSIENT_BIT            CommandPoolCreateFlagBits = 1 << 0
	COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT                           = 1 << 1
)

type CommandPoolResetFlagBits = CommandPoolResetFlags

const (
	COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT CommandPoolResetFlagBits = 1 << 0
)

// CompareOp: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCompareOp.html
type CompareOp int32

const (
	COMPARE_OP_NEVER            CompareOp = 0
	COMPARE_OP_LESS                       = 1
	COMPARE_OP_EQUAL                      = 2
	COMPARE_OP_LESS_OR_EQUAL              = 3
	COMPARE_OP_GREATER                    = 4
	COMPARE_OP_NOT_EQUAL                  = 5
	COMPARE_OP_GREATER_OR_EQUAL           = 6
	COMPARE_OP_ALWAYS                     = 7
)

// ComponentSwizzle: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkComponentSwizzle.html
type ComponentSwizzle int32

const (
	COMPONENT_SWIZZLE_IDENTITY ComponentSwizzle = 0
	COMPONENT_SWIZZLE_ZERO                      = 1
	COMPONENT_SWIZZLE_ONE                       = 2
	COMPONENT_SWIZZLE_R                         = 3
	COMPONENT_SWIZZLE_G                         = 4
	COMPONENT_SWIZZLE_B                         = 5
	COMPONENT_SWIZZLE_A                         = 6
)

type CompositeAlphaFlagBitsKHR = CompositeAlphaFlagsKHR

const (
	COMPOSITE_ALPHA_OPAQUE_BIT_KHR          CompositeAlphaFlagBitsKHR = 1 << 0
	COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR                            = 1 << 1
	COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR                           = 1 << 2
	COMPOSITE_ALPHA_INHERIT_BIT_KHR                                   = 1 << 3
)

type CullModeFlagBits = CullModeFlags

const (
	CULL_MODE_NONE           CullModeFlagBits = 0
	CULL_MODE_FRONT_AND_BACK                  = 0x00000003
	CULL_MODE_FRONT_BIT                       = 1 << 0
	CULL_MODE_BACK_BIT                        = 1 << 1
)

type DependencyFlagBits = DependencyFlags

const (
	DEPENDENCY_BY_REGION_BIT DependencyFlagBits = 1 << 0
)

type DescriptorPoolCreateFlagBits = DescriptorPoolCreateFlags

const (
	DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT DescriptorPoolCreateFlagBits = 1 << 0
)

type DescriptorSetLayoutCreateFlagBits = DescriptorSetLayoutCreateFlags

// DescriptorType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorType.html
type DescriptorType int32

const (
	DESCRIPTOR_TYPE_SAMPLER                DescriptorType = 0
	DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER                = 1
	DESCRIPTOR_TYPE_SAMPLED_IMAGE                         = 2
	DESCRIPTOR_TYPE_STORAGE_IMAGE                         = 3
	DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER                  = 4
	DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER                  = 5
	DESCRIPTOR_TYPE_UNIFORM_BUFFER                        = 6
	DESCRIPTOR_TYPE_STORAGE_BUFFER                        = 7
	DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC                = 8
	DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC                = 9
	DESCRIPTOR_TYPE_INPUT_ATTACHMENT                      = 10
)

// DescriptorUpdateTemplateType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorUpdateTemplateType.html
type DescriptorUpdateTemplateType int32

const (
	// Create descriptor update template for descriptor set updates
	DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET DescriptorUpdateTemplateType = 0
)

type DeviceQueueCreateFlagBits = DeviceQueueCreateFlags

// DynamicState: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDynamicState.html
type DynamicState int32

const (
	DYNAMIC_STATE_VIEWPORT             DynamicState = 0
	DYNAMIC_STATE_SCISSOR                           = 1
	DYNAMIC_STATE_LINE_WIDTH                        = 2
	DYNAMIC_STATE_DEPTH_BIAS                        = 3
	DYNAMIC_STATE_BLEND_CONSTANTS                   = 4
	DYNAMIC_STATE_DEPTH_BOUNDS                      = 5
	DYNAMIC_STATE_STENCIL_COMPARE_MASK              = 6
	DYNAMIC_STATE_STENCIL_WRITE_MASK                = 7
	DYNAMIC_STATE_STENCIL_REFERENCE                 = 8
)

type EventCreateFlagBits = EventCreateFlags
type ExternalFenceFeatureFlagBits = ExternalFenceFeatureFlags

const (
	EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT ExternalFenceFeatureFlagBits = 1 << 0
	EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT                              = 1 << 1
)

type ExternalFenceHandleTypeFlagBits = ExternalFenceHandleTypeFlags

const (
	EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT        ExternalFenceHandleTypeFlagBits = 1 << 0
	EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT                                     = 1 << 1
	EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT                                 = 1 << 2
	EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT                                          = 1 << 3
)

type ExternalMemoryFeatureFlagBits = ExternalMemoryFeatureFlags

const (
	EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT ExternalMemoryFeatureFlagBits = 1 << 0
	EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT                                   = 1 << 1
	EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT                                   = 1 << 2
)

type ExternalMemoryHandleTypeFlagBits = ExternalMemoryHandleTypeFlags

const (
	EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT         ExternalMemoryHandleTypeFlagBits = 1 << 0
	EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT                                       = 1 << 1
	EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT                                   = 1 << 2
	EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT                                      = 1 << 3
	EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT                                  = 1 << 4
	EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT                                         = 1 << 5
	EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT                                     = 1 << 6
)

type ExternalSemaphoreFeatureFlagBits = ExternalSemaphoreFeatureFlags

const (
	EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT ExternalSemaphoreFeatureFlagBits = 1 << 0
	EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT                                  = 1 << 1
)

type ExternalSemaphoreHandleTypeFlagBits = ExternalSemaphoreHandleTypeFlags

const (
	EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT        ExternalSemaphoreHandleTypeFlagBits = 1 << 0
	EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT                                         = 1 << 1
	EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT                                     = 1 << 2
	EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT                                          = 1 << 3
	EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT                                              = 1 << 4
	EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT                                          = EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT
)

type FenceCreateFlagBits = FenceCreateFlags

const (
	FENCE_CREATE_SIGNALED_BIT FenceCreateFlagBits = 1 << 0
)

type FenceImportFlagBits = FenceImportFlags

const (
	FENCE_IMPORT_TEMPORARY_BIT FenceImportFlagBits = 1 << 0
)

// Filter: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFilter.html
type Filter int32

const (
	FILTER_NEAREST Filter = 0
	FILTER_LINEAR         = 1
)

// Format: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFormat.html
type Format int32

const (
	FORMAT_UNDEFINED                  Format = 0
	FORMAT_R4G4_UNORM_PACK8                  = 1
	FORMAT_R4G4B4A4_UNORM_PACK16             = 2
	FORMAT_B4G4R4A4_UNORM_PACK16             = 3
	FORMAT_R5G6B5_UNORM_PACK16               = 4
	FORMAT_B5G6R5_UNORM_PACK16               = 5
	FORMAT_R5G5B5A1_UNORM_PACK16             = 6
	FORMAT_B5G5R5A1_UNORM_PACK16             = 7
	FORMAT_A1R5G5B5_UNORM_PACK16             = 8
	FORMAT_R8_UNORM                          = 9
	FORMAT_R8_SNORM                          = 10
	FORMAT_R8_USCALED                        = 11
	FORMAT_R8_SSCALED                        = 12
	FORMAT_R8_UINT                           = 13
	FORMAT_R8_SINT                           = 14
	FORMAT_R8_SRGB                           = 15
	FORMAT_R8G8_UNORM                        = 16
	FORMAT_R8G8_SNORM                        = 17
	FORMAT_R8G8_USCALED                      = 18
	FORMAT_R8G8_SSCALED                      = 19
	FORMAT_R8G8_UINT                         = 20
	FORMAT_R8G8_SINT                         = 21
	FORMAT_R8G8_SRGB                         = 22
	FORMAT_R8G8B8_UNORM                      = 23
	FORMAT_R8G8B8_SNORM                      = 24
	FORMAT_R8G8B8_USCALED                    = 25
	FORMAT_R8G8B8_SSCALED                    = 26
	FORMAT_R8G8B8_UINT                       = 27
	FORMAT_R8G8B8_SINT                       = 28
	FORMAT_R8G8B8_SRGB                       = 29
	FORMAT_B8G8R8_UNORM                      = 30
	FORMAT_B8G8R8_SNORM                      = 31
	FORMAT_B8G8R8_USCALED                    = 32
	FORMAT_B8G8R8_SSCALED                    = 33
	FORMAT_B8G8R8_UINT                       = 34
	FORMAT_B8G8R8_SINT                       = 35
	FORMAT_B8G8R8_SRGB                       = 36
	FORMAT_R8G8B8A8_UNORM                    = 37
	FORMAT_R8G8B8A8_SNORM                    = 38
	FORMAT_R8G8B8A8_USCALED                  = 39
	FORMAT_R8G8B8A8_SSCALED                  = 40
	FORMAT_R8G8B8A8_UINT                     = 41
	FORMAT_R8G8B8A8_SINT                     = 42
	FORMAT_R8G8B8A8_SRGB                     = 43
	FORMAT_B8G8R8A8_UNORM                    = 44
	FORMAT_B8G8R8A8_SNORM                    = 45
	FORMAT_B8G8R8A8_USCALED                  = 46
	FORMAT_B8G8R8A8_SSCALED                  = 47
	FORMAT_B8G8R8A8_UINT                     = 48
	FORMAT_B8G8R8A8_SINT                     = 49
	FORMAT_B8G8R8A8_SRGB                     = 50
	FORMAT_A8B8G8R8_UNORM_PACK32             = 51
	FORMAT_A8B8G8R8_SNORM_PACK32             = 52
	FORMAT_A8B8G8R8_USCALED_PACK32           = 53
	FORMAT_A8B8G8R8_SSCALED_PACK32           = 54
	FORMAT_A8B8G8R8_UINT_PACK32              = 55
	FORMAT_A8B8G8R8_SINT_PACK32              = 56
	FORMAT_A8B8G8R8_SRGB_PACK32              = 57
	FORMAT_A2R10G10B10_UNORM_PACK32          = 58
	FORMAT_A2R10G10B10_SNORM_PACK32          = 59
	FORMAT_A2R10G10B10_USCALED_PACK32        = 60
	FORMAT_A2R10G10B10_SSCALED_PACK32        = 61
	FORMAT_A2R10G10B10_UINT_PACK32           = 62
	FORMAT_A2R10G10B10_SINT_PACK32           = 63
	FORMAT_A2B10G10R10_UNORM_PACK32          = 64
	FORMAT_A2B10G10R10_SNORM_PACK32          = 65
	FORMAT_A2B10G10R10_USCALED_PACK32        = 66
	FORMAT_A2B10G10R10_SSCALED_PACK32        = 67
	FORMAT_A2B10G10R10_UINT_PACK32           = 68
	FORMAT_A2B10G10R10_SINT_PACK32           = 69
	FORMAT_R16_UNORM                         = 70
	FORMAT_R16_SNORM                         = 71
	FORMAT_R16_USCALED                       = 72
	FORMAT_R16_SSCALED                       = 73
	FORMAT_R16_UINT                          = 74
	FORMAT_R16_SINT                          = 75
	FORMAT_R16_SFLOAT                        = 76
	FORMAT_R16G16_UNORM                      = 77
	FORMAT_R16G16_SNORM                      = 78
	FORMAT_R16G16_USCALED                    = 79
	FORMAT_R16G16_SSCALED                    = 80
	FORMAT_R16G16_UINT                       = 81
	FORMAT_R16G16_SINT                       = 82
	FORMAT_R16G16_SFLOAT                     = 83
	FORMAT_R16G16B16_UNORM                   = 84
	FORMAT_R16G16B16_SNORM                   = 85
	FORMAT_R16G16B16_USCALED                 = 86
	FORMAT_R16G16B16_SSCALED                 = 87
	FORMAT_R16G16B16_UINT                    = 88
	FORMAT_R16G16B16_SINT                    = 89
	FORMAT_R16G16B16_SFLOAT                  = 90
	FORMAT_R16G16B16A16_UNORM                = 91
	FORMAT_R16G16B16A16_SNORM                = 92
	FORMAT_R16G16B16A16_USCALED              = 93
	FORMAT_R16G16B16A16_SSCALED              = 94
	FORMAT_R16G16B16A16_UINT                 = 95
	FORMAT_R16G16B16A16_SINT                 = 96
	FORMAT_R16G16B16A16_SFLOAT               = 97
	FORMAT_R32_UINT                          = 98
	FORMAT_R32_SINT                          = 99
	FORMAT_R32_SFLOAT                        = 100
	FORMAT_R32G32_UINT                       = 101
	FORMAT_R32G32_SINT                       = 102
	FORMAT_R32G32_SFLOAT                     = 103
	FORMAT_R32G32B32_UINT                    = 104
	FORMAT_R32G32B32_SINT                    = 105
	FORMAT_R32G32B32_SFLOAT                  = 106
	FORMAT_R32G32B32A32_UINT                 = 107
	FORMAT_R32G32B32A32_SINT                 = 108
	FORMAT_R32G32B32A32_SFLOAT               = 109
	FORMAT_R64_UINT                          = 110
	FORMAT_R64_SINT                          = 111
	FORMAT_R64_SFLOAT                        = 112
	FORMAT_R64G64_UINT                       = 113
	FORMAT_R64G64_SINT                       = 114
	FORMAT_R64G64_SFLOAT                     = 115
	FORMAT_R64G64B64_UINT                    = 116
	FORMAT_R64G64B64_SINT                    = 117
	FORMAT_R64G64B64_SFLOAT                  = 118
	FORMAT_R64G64B64A64_UINT                 = 119
	FORMAT_R64G64B64A64_SINT                 = 120
	FORMAT_R64G64B64A64_SFLOAT               = 121
	FORMAT_B10G11R11_UFLOAT_PACK32           = 122
	FORMAT_E5B9G9R9_UFLOAT_PACK32            = 123
	FORMAT_D16_UNORM                         = 124
	FORMAT_X8_D24_UNORM_PACK32               = 125
	FORMAT_D32_SFLOAT                        = 126
	FORMAT_S8_UINT                           = 127
	FORMAT_D16_UNORM_S8_UINT                 = 128
	FORMAT_D24_UNORM_S8_UINT                 = 129
	FORMAT_D32_SFLOAT_S8_UINT                = 130
	FORMAT_BC1_RGB_UNORM_BLOCK               = 131
	FORMAT_BC1_RGB_SRGB_BLOCK                = 132
	FORMAT_BC1_RGBA_UNORM_BLOCK              = 133
	FORMAT_BC1_RGBA_SRGB_BLOCK               = 134
	FORMAT_BC2_UNORM_BLOCK                   = 135
	FORMAT_BC2_SRGB_BLOCK                    = 136
	FORMAT_BC3_UNORM_BLOCK                   = 137
	FORMAT_BC3_SRGB_BLOCK                    = 138
	FORMAT_BC4_UNORM_BLOCK                   = 139
	FORMAT_BC4_SNORM_BLOCK                   = 140
	FORMAT_BC5_UNORM_BLOCK                   = 141
	FORMAT_BC5_SNORM_BLOCK                   = 142
	FORMAT_BC6H_UFLOAT_BLOCK                 = 143
	FORMAT_BC6H_SFLOAT_BLOCK                 = 144
	FORMAT_BC7_UNORM_BLOCK                   = 145
	FORMAT_BC7_SRGB_BLOCK                    = 146
	FORMAT_ETC2_R8G8B8_UNORM_BLOCK           = 147
	FORMAT_ETC2_R8G8B8_SRGB_BLOCK            = 148
	FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK         = 149
	FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK          = 150
	FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK         = 151
	FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK          = 152
	FORMAT_EAC_R11_UNORM_BLOCK               = 153
	FORMAT_EAC_R11_SNORM_BLOCK               = 154
	FORMAT_EAC_R11G11_UNORM_BLOCK            = 155
	FORMAT_EAC_R11G11_SNORM_BLOCK            = 156
	FORMAT_ASTC_4x4_UNORM_BLOCK              = 157
	FORMAT_ASTC_4x4_SRGB_BLOCK               = 158
	FORMAT_ASTC_5x4_UNORM_BLOCK              = 159
	FORMAT_ASTC_5x4_SRGB_BLOCK               = 160
	FORMAT_ASTC_5x5_UNORM_BLOCK              = 161
	FORMAT_ASTC_5x5_SRGB_BLOCK               = 162
	FORMAT_ASTC_6x5_UNORM_BLOCK              = 163
	FORMAT_ASTC_6x5_SRGB_BLOCK               = 164
	FORMAT_ASTC_6x6_UNORM_BLOCK              = 165
	FORMAT_ASTC_6x6_SRGB_BLOCK               = 166
	FORMAT_ASTC_8x5_UNORM_BLOCK              = 167
	FORMAT_ASTC_8x5_SRGB_BLOCK               = 168
	FORMAT_ASTC_8x6_UNORM_BLOCK              = 169
	FORMAT_ASTC_8x6_SRGB_BLOCK               = 170
	FORMAT_ASTC_8x8_UNORM_BLOCK              = 171
	FORMAT_ASTC_8x8_SRGB_BLOCK               = 172
	FORMAT_ASTC_10x5_UNORM_BLOCK             = 173
	FORMAT_ASTC_10x5_SRGB_BLOCK              = 174
	FORMAT_ASTC_10x6_UNORM_BLOCK             = 175
	FORMAT_ASTC_10x6_SRGB_BLOCK              = 176
	FORMAT_ASTC_10x8_UNORM_BLOCK             = 177
	FORMAT_ASTC_10x8_SRGB_BLOCK              = 178
	FORMAT_ASTC_10x10_UNORM_BLOCK            = 179
	FORMAT_ASTC_10x10_SRGB_BLOCK             = 180
	FORMAT_ASTC_12x10_UNORM_BLOCK            = 181
	FORMAT_ASTC_12x10_SRGB_BLOCK             = 182
	FORMAT_ASTC_12x12_UNORM_BLOCK            = 183
	FORMAT_ASTC_12x12_SRGB_BLOCK             = 184
)

type FormatFeatureFlagBits = FormatFeatureFlags

const (
	FORMAT_FEATURE_SAMPLED_IMAGE_BIT               FormatFeatureFlagBits = 1 << 0
	FORMAT_FEATURE_STORAGE_IMAGE_BIT                                     = 1 << 1
	FORMAT_FEATURE_BLIT_SRC_BIT                                          = 1 << 10
	FORMAT_FEATURE_BLIT_DST_BIT                                          = 1 << 11
	FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT                       = 1 << 12
	FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT                              = 1 << 2
	FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT                              = 1 << 3
	FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT                              = 1 << 4
	FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT                       = 1 << 5
	FORMAT_FEATURE_VERTEX_BUFFER_BIT                                     = 1 << 6
	FORMAT_FEATURE_COLOR_ATTACHMENT_BIT                                  = 1 << 7
	FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT                            = 1 << 8
	FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT                          = 1 << 9
)

type FramebufferCreateFlagBits = FramebufferCreateFlags

// FrontFace: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFrontFace.html
type FrontFace int32

const (
	FRONT_FACE_COUNTER_CLOCKWISE FrontFace = 0
	FRONT_FACE_CLOCKWISE                   = 1
)

type ImageAspectFlagBits = ImageAspectFlags

const (
	IMAGE_ASPECT_COLOR_BIT    ImageAspectFlagBits = 1 << 0
	IMAGE_ASPECT_DEPTH_BIT                        = 1 << 1
	IMAGE_ASPECT_STENCIL_BIT                      = 1 << 2
	IMAGE_ASPECT_METADATA_BIT                     = 1 << 3
)

type ImageCreateFlagBits = ImageCreateFlags

const (
	IMAGE_CREATE_SPARSE_BINDING_BIT   ImageCreateFlagBits = 1 << 0
	IMAGE_CREATE_SPARSE_RESIDENCY_BIT                     = 1 << 1
	IMAGE_CREATE_SPARSE_ALIASED_BIT                       = 1 << 2
	IMAGE_CREATE_MUTABLE_FORMAT_BIT                       = 1 << 3
	IMAGE_CREATE_CUBE_COMPATIBLE_BIT                      = 1 << 4
)

// ImageLayout: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageLayout.html
type ImageLayout int32

const (
	// Implicit layout an image is when its contents are undefined due to various reasons (e.g. right after creation)
	IMAGE_LAYOUT_UNDEFINED ImageLayout = 0
	// General layout when image can be used for any kind of access
	IMAGE_LAYOUT_GENERAL = 1
	// Optimal layout when image is only used for color attachment read/write
	IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2
	// Optimal layout when image is only used for depth/stencil attachment read/write
	IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3
	// Optimal layout when image is used for read only depth/stencil attachment and shader access
	IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4
	// Optimal layout when image is used for read only shader access
	IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5
	// Optimal layout when image is used only as source of transfer operations
	IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6
	// Optimal layout when image is used only as destination of transfer operations
	IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7
	// Initial layout used when the data is populated by the CPU
	IMAGE_LAYOUT_PREINITIALIZED = 8
)

// ImageTiling: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageTiling.html
type ImageTiling int32

const (
	IMAGE_TILING_OPTIMAL ImageTiling = 0
	IMAGE_TILING_LINEAR              = 1
)

// ImageType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageType.html
type ImageType int32

const (
	IMAGE_TYPE_1D ImageType = 0
	IMAGE_TYPE_2D           = 1
	IMAGE_TYPE_3D           = 2
)

type ImageUsageFlagBits = ImageUsageFlags

const (
	IMAGE_USAGE_TRANSFER_SRC_BIT             ImageUsageFlagBits = 1 << 0
	IMAGE_USAGE_TRANSFER_DST_BIT                                = 1 << 1
	IMAGE_USAGE_SAMPLED_BIT                                     = 1 << 2
	IMAGE_USAGE_STORAGE_BIT                                     = 1 << 3
	IMAGE_USAGE_COLOR_ATTACHMENT_BIT                            = 1 << 4
	IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT                    = 1 << 5
	IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT                        = 1 << 6
	IMAGE_USAGE_INPUT_ATTACHMENT_BIT                            = 1 << 7
)

type ImageViewCreateFlagBits = ImageViewCreateFlags

// ImageViewType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageViewType.html
type ImageViewType int32

const (
	IMAGE_VIEW_TYPE_1D         ImageViewType = 0
	IMAGE_VIEW_TYPE_2D                       = 1
	IMAGE_VIEW_TYPE_3D                       = 2
	IMAGE_VIEW_TYPE_CUBE                     = 3
	IMAGE_VIEW_TYPE_1D_ARRAY                 = 4
	IMAGE_VIEW_TYPE_2D_ARRAY                 = 5
	IMAGE_VIEW_TYPE_CUBE_ARRAY               = 6
)

// InternalAllocationType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkInternalAllocationType.html
type InternalAllocationType int32

const (
	INTERNAL_ALLOCATION_TYPE_EXECUTABLE InternalAllocationType = 0
)

// LogicOp: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkLogicOp.html
type LogicOp int32

const (
	LOGIC_OP_CLEAR         LogicOp = 0
	LOGIC_OP_AND                   = 1
	LOGIC_OP_AND_REVERSE           = 2
	LOGIC_OP_COPY                  = 3
	LOGIC_OP_AND_INVERTED          = 4
	LOGIC_OP_NO_OP                 = 5
	LOGIC_OP_XOR                   = 6
	LOGIC_OP_OR                    = 7
	LOGIC_OP_NOR                   = 8
	LOGIC_OP_EQUIVALENT            = 9
	LOGIC_OP_INVERT                = 10
	LOGIC_OP_OR_REVERSE            = 11
	LOGIC_OP_COPY_INVERTED         = 12
	LOGIC_OP_OR_INVERTED           = 13
	LOGIC_OP_NAND                  = 14
	LOGIC_OP_SET                   = 15
)

type MemoryAllocateFlagBits = MemoryAllocateFlags

const (
	MEMORY_ALLOCATE_DEVICE_MASK_BIT MemoryAllocateFlagBits = 1 << 0
)

type MemoryHeapFlagBits = MemoryHeapFlags

const (
	MEMORY_HEAP_DEVICE_LOCAL_BIT MemoryHeapFlagBits = 1 << 0
)

type MemoryPropertyFlagBits = MemoryPropertyFlags

const (
	MEMORY_PROPERTY_DEVICE_LOCAL_BIT     MemoryPropertyFlagBits = 1 << 0
	MEMORY_PROPERTY_HOST_VISIBLE_BIT                            = 1 << 1
	MEMORY_PROPERTY_HOST_COHERENT_BIT                           = 1 << 2
	MEMORY_PROPERTY_HOST_CACHED_BIT                             = 1 << 3
	MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT                        = 1 << 4
)

// ObjectType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkObjectType.html
type ObjectType int32

const (
	OBJECT_TYPE_UNKNOWN               ObjectType = 0
	OBJECT_TYPE_INSTANCE                         = 1
	OBJECT_TYPE_PHYSICAL_DEVICE                  = 2
	OBJECT_TYPE_DEVICE                           = 3
	OBJECT_TYPE_QUEUE                            = 4
	OBJECT_TYPE_SEMAPHORE                        = 5
	OBJECT_TYPE_COMMAND_BUFFER                   = 6
	OBJECT_TYPE_FENCE                            = 7
	OBJECT_TYPE_DEVICE_MEMORY                    = 8
	OBJECT_TYPE_BUFFER                           = 9
	OBJECT_TYPE_IMAGE                            = 10
	OBJECT_TYPE_EVENT                            = 11
	OBJECT_TYPE_QUERY_POOL                       = 12
	OBJECT_TYPE_BUFFER_VIEW                      = 13
	OBJECT_TYPE_IMAGE_VIEW                       = 14
	OBJECT_TYPE_SHADER_MODULE                    = 15
	OBJECT_TYPE_PIPELINE_CACHE                   = 16
	OBJECT_TYPE_PIPELINE_LAYOUT                  = 17
	OBJECT_TYPE_RENDER_PASS                      = 18
	OBJECT_TYPE_PIPELINE                         = 19
	OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT            = 20
	OBJECT_TYPE_SAMPLER                          = 21
	OBJECT_TYPE_DESCRIPTOR_POOL                  = 22
	OBJECT_TYPE_DESCRIPTOR_SET                   = 23
	OBJECT_TYPE_FRAMEBUFFER                      = 24
	OBJECT_TYPE_COMMAND_POOL                     = 25
)

type PeerMemoryFeatureFlagBits = PeerMemoryFeatureFlags

const (
	PEER_MEMORY_FEATURE_COPY_SRC_BIT    PeerMemoryFeatureFlagBits = 1 << 0
	PEER_MEMORY_FEATURE_COPY_DST_BIT                              = 1 << 1
	PEER_MEMORY_FEATURE_GENERIC_SRC_BIT                           = 1 << 2
	PEER_MEMORY_FEATURE_GENERIC_DST_BIT                           = 1 << 3
)

// PhysicalDeviceType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceType.html
type PhysicalDeviceType int32

const (
	PHYSICAL_DEVICE_TYPE_OTHER          PhysicalDeviceType = 0
	PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU                    = 1
	PHYSICAL_DEVICE_TYPE_DISCRETE_GPU                      = 2
	PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU                       = 3
	PHYSICAL_DEVICE_TYPE_CPU                               = 4
)

// PipelineBindPoint: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineBindPoint.html
type PipelineBindPoint int32

const (
	PIPELINE_BIND_POINT_GRAPHICS PipelineBindPoint = 0
	PIPELINE_BIND_POINT_COMPUTE                    = 1
)

// PipelineCacheHeaderVersion: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCacheHeaderVersion.html
type PipelineCacheHeaderVersion int32

const (
	PIPELINE_CACHE_HEADER_VERSION_ONE PipelineCacheHeaderVersion = 1
)

type PipelineCreateFlagBits = PipelineCreateFlags

const (
	PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT PipelineCreateFlagBits = 1 << 0
	PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT                           = 1 << 1
	PIPELINE_CREATE_DERIVATIVE_BIT                                  = 1 << 2
)

type PipelineShaderStageCreateFlagBits = PipelineShaderStageCreateFlags
type PipelineStageFlagBits = PipelineStageFlags

const (
	PIPELINE_STAGE_TOP_OF_PIPE_BIT                    PipelineStageFlagBits = 1 << 0
	PIPELINE_STAGE_DRAW_INDIRECT_BIT                                        = 1 << 1
	PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT                              = 1 << 10
	PIPELINE_STAGE_COMPUTE_SHADER_BIT                                       = 1 << 11
	PIPELINE_STAGE_TRANSFER_BIT                                             = 1 << 12
	PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT                                       = 1 << 13
	PIPELINE_STAGE_HOST_BIT                                                 = 1 << 14
	PIPELINE_STAGE_ALL_GRAPHICS_BIT                                         = 1 << 15
	PIPELINE_STAGE_ALL_COMMANDS_BIT                                         = 1 << 16
	PIPELINE_STAGE_VERTEX_INPUT_BIT                                         = 1 << 2
	PIPELINE_STAGE_VERTEX_SHADER_BIT                                        = 1 << 3
	PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT                          = 1 << 4
	PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT                       = 1 << 5
	PIPELINE_STAGE_GEOMETRY_SHADER_BIT                                      = 1 << 6
	PIPELINE_STAGE_FRAGMENT_SHADER_BIT                                      = 1 << 7
	PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT                                 = 1 << 8
	PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT                                  = 1 << 9
)

// PointClippingBehavior: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPointClippingBehavior.html
type PointClippingBehavior int32

const (
	POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES       PointClippingBehavior = 0
	POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY                       = 1
)

// PolygonMode: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPolygonMode.html
type PolygonMode int32

const (
	POLYGON_MODE_FILL  PolygonMode = 0
	POLYGON_MODE_LINE              = 1
	POLYGON_MODE_POINT             = 2
)

// PresentModeKHR: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPresentModeKHR.html
type PresentModeKHR int32

const (
	PRESENT_MODE_IMMEDIATE_KHR    PresentModeKHR = 0
	PRESENT_MODE_MAILBOX_KHR                     = 1
	PRESENT_MODE_FIFO_KHR                        = 2
	PRESENT_MODE_FIFO_RELAXED_KHR                = 3
)

// PrimitiveTopology: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPrimitiveTopology.html
type PrimitiveTopology int32

const (
	PRIMITIVE_TOPOLOGY_POINT_LIST                    PrimitiveTopology = 0
	PRIMITIVE_TOPOLOGY_LINE_LIST                                       = 1
	PRIMITIVE_TOPOLOGY_LINE_STRIP                                      = 2
	PRIMITIVE_TOPOLOGY_TRIANGLE_LIST                                   = 3
	PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP                                  = 4
	PRIMITIVE_TOPOLOGY_TRIANGLE_FAN                                    = 5
	PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY                        = 6
	PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY                       = 7
	PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY                    = 8
	PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY                   = 9
	PRIMITIVE_TOPOLOGY_PATCH_LIST                                      = 10
)

type QueryControlFlagBits = QueryControlFlags

const (
	QUERY_CONTROL_PRECISE_BIT QueryControlFlagBits = 1 << 0
)

type QueryPipelineStatisticFlagBits = QueryPipelineStatisticFlags

const (
	QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT                    QueryPipelineStatisticFlagBits = 1 << 0
	QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT                                                 = 1 << 1
	QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT                                                = 1 << 10
	QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT                                                 = 1 << 2
	QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT                                               = 1 << 3
	QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT                                                = 1 << 4
	QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT                                                      = 1 << 5
	QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT                                                       = 1 << 6
	QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT                                               = 1 << 7
	QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT                                       = 1 << 8
	QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT                                = 1 << 9
)

type QueryResultFlagBits = QueryResultFlags

const (
	QUERY_RESULT_64_BIT                QueryResultFlagBits = 1 << 0
	QUERY_RESULT_WAIT_BIT                                  = 1 << 1
	QUERY_RESULT_WITH_AVAILABILITY_BIT                     = 1 << 2
	QUERY_RESULT_PARTIAL_BIT                               = 1 << 3
)

// QueryType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueryType.html
type QueryType int32

const (
	QUERY_TYPE_OCCLUSION QueryType = 0
	// Optional
	QUERY_TYPE_PIPELINE_STATISTICS = 1
	QUERY_TYPE_TIMESTAMP           = 2
)

type QueueFlagBits = QueueFlags

const (
	QUEUE_GRAPHICS_BIT       QueueFlagBits = 1 << 0
	QUEUE_COMPUTE_BIT                      = 1 << 1
	QUEUE_TRANSFER_BIT                     = 1 << 2
	QUEUE_SPARSE_BINDING_BIT               = 1 << 3
)

type RenderPassCreateFlagBits = RenderPassCreateFlags

// Result: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkResult.html
type Result int32

const (
	// An unknown error has occurred, due to an implementation or application bug
	ERROR_UNKNOWN Result = -13
	// A requested pool allocation has failed due to fragmentation of the pool's memory
	ERROR_FRAGMENTED_POOL = -12
	// Requested format is not supported on this device
	ERROR_FORMAT_NOT_SUPPORTED = -11
	// Too many objects of the type have already been created
	ERROR_TOO_MANY_OBJECTS = -10
	// Unable to find a Vulkan driver
	ERROR_INCOMPATIBLE_DRIVER = -9
	// Requested feature is not available on this device
	ERROR_FEATURE_NOT_PRESENT = -8
	// Extension specified does not exist
	ERROR_EXTENSION_NOT_PRESENT = -7
	// Layer specified does not exist
	ERROR_LAYER_NOT_PRESENT = -6
	// Mapping of a memory object has failed
	ERROR_MEMORY_MAP_FAILED = -5
	// The logical device has been lost. See <<devsandqueues-lost-device>>
	ERROR_DEVICE_LOST = -4
	// Initialization of a object has failed
	ERROR_INITIALIZATION_FAILED = -3
	// A device memory allocation has failed
	ERROR_OUT_OF_DEVICE_MEMORY = -2
	// A host memory allocation has failed
	ERROR_OUT_OF_HOST_MEMORY = -1
	// Command completed successfully
	SUCCESS = 0
	// A fence or query has not yet completed
	NOT_READY = 1
	// A wait operation has not completed in the specified time
	TIMEOUT = 2
	// An event is signaled
	EVENT_SET = 3
	// An event is unsignaled
	EVENT_RESET = 4
	// A return array was too small for the result
	INCOMPLETE = 5
)

type SampleCountFlagBits = SampleCountFlags

const (
	SAMPLE_COUNT_1_BIT  SampleCountFlagBits = 1 << 0
	SAMPLE_COUNT_2_BIT                      = 1 << 1
	SAMPLE_COUNT_4_BIT                      = 1 << 2
	SAMPLE_COUNT_8_BIT                      = 1 << 3
	SAMPLE_COUNT_16_BIT                     = 1 << 4
	SAMPLE_COUNT_32_BIT                     = 1 << 5
	SAMPLE_COUNT_64_BIT                     = 1 << 6
)

// SamplerAddressMode: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerAddressMode.html
type SamplerAddressMode int32

const (
	SAMPLER_ADDRESS_MODE_REPEAT          SamplerAddressMode = 0
	SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT                    = 1
	SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE                      = 2
	SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER                    = 3
)

type SamplerCreateFlagBits = SamplerCreateFlags

// SamplerMipmapMode: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerMipmapMode.html
type SamplerMipmapMode int32

const (
	// Choose nearest mip level
	SAMPLER_MIPMAP_MODE_NEAREST SamplerMipmapMode = 0
	// Linear filter between mip levels
	SAMPLER_MIPMAP_MODE_LINEAR = 1
)

// SamplerYcbcrModelConversion: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrModelConversion.html
type SamplerYcbcrModelConversion int32

const (
	SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY SamplerYcbcrModelConversion = 0
	// just range expansion
	SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY = 1
	// aka HD YUV
	SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 = 2
	// aka SD YUV
	SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 = 3
	// aka UHD YUV
	SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 = 4
)

// SamplerYcbcrRange: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrRange.html
type SamplerYcbcrRange int32

const (
	// Luma 0..1 maps to 0..255, chroma -0.5..0.5 to 1..255 (clamped)
	SAMPLER_YCBCR_RANGE_ITU_FULL SamplerYcbcrRange = 0
	// Luma 0..1 maps to 16..235, chroma -0.5..0.5 to 16..240
	SAMPLER_YCBCR_RANGE_ITU_NARROW = 1
)

type SemaphoreImportFlagBits = SemaphoreImportFlags

const (
	SEMAPHORE_IMPORT_TEMPORARY_BIT SemaphoreImportFlagBits = 1 << 0
)

type ShaderStageFlagBits = ShaderStageFlags

const (
	SHADER_STAGE_ALL_GRAPHICS                ShaderStageFlagBits = 0x0000001F
	SHADER_STAGE_ALL                                             = 0x7FFFFFFF
	SHADER_STAGE_VERTEX_BIT                                      = 1 << 0
	SHADER_STAGE_TESSELLATION_CONTROL_BIT                        = 1 << 1
	SHADER_STAGE_TESSELLATION_EVALUATION_BIT                     = 1 << 2
	SHADER_STAGE_GEOMETRY_BIT                                    = 1 << 3
	SHADER_STAGE_FRAGMENT_BIT                                    = 1 << 4
	SHADER_STAGE_COMPUTE_BIT                                     = 1 << 5
)

// SharingMode: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSharingMode.html
type SharingMode int32

const (
	SHARING_MODE_EXCLUSIVE  SharingMode = 0
	SHARING_MODE_CONCURRENT             = 1
)

type SparseImageFormatFlagBits = SparseImageFormatFlags

const (
	SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT         SparseImageFormatFlagBits = 1 << 0
	SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT                                 = 1 << 1
	SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT                           = 1 << 2
)

type SparseMemoryBindFlagBits = SparseMemoryBindFlags

const (
	SPARSE_MEMORY_BIND_METADATA_BIT SparseMemoryBindFlagBits = 1 << 0
)

// StencilOp: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkStencilOp.html
type StencilOp int32

const (
	STENCIL_OP_KEEP                StencilOp = 0
	STENCIL_OP_ZERO                          = 1
	STENCIL_OP_REPLACE                       = 2
	STENCIL_OP_INCREMENT_AND_CLAMP           = 3
	STENCIL_OP_DECREMENT_AND_CLAMP           = 4
	STENCIL_OP_INVERT                        = 5
	STENCIL_OP_INCREMENT_AND_WRAP            = 6
	STENCIL_OP_DECREMENT_AND_WRAP            = 7
)

// StructureType: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkStructureType.html
type StructureType int32

const (
	STRUCTURE_TYPE_APPLICATION_INFO                          StructureType = 0
	STRUCTURE_TYPE_INSTANCE_CREATE_INFO                                    = 1
	STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO                                = 2
	STRUCTURE_TYPE_DEVICE_CREATE_INFO                                      = 3
	STRUCTURE_TYPE_SUBMIT_INFO                                             = 4
	STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO                                    = 5
	STRUCTURE_TYPE_MAPPED_MEMORY_RANGE                                     = 6
	STRUCTURE_TYPE_BIND_SPARSE_INFO                                        = 7
	STRUCTURE_TYPE_FENCE_CREATE_INFO                                       = 8
	STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO                                   = 9
	STRUCTURE_TYPE_EVENT_CREATE_INFO                                       = 10
	STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO                                  = 11
	STRUCTURE_TYPE_BUFFER_CREATE_INFO                                      = 12
	STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO                                 = 13
	STRUCTURE_TYPE_IMAGE_CREATE_INFO                                       = 14
	STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO                                  = 15
	STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO                               = 16
	STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO                              = 17
	STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO                       = 18
	STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO                 = 19
	STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO               = 20
	STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO                 = 21
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO                     = 22
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO                = 23
	STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO                  = 24
	STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO                = 25
	STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO                  = 26
	STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO                      = 27
	STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO                           = 28
	STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO                            = 29
	STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO                             = 30
	STRUCTURE_TYPE_SAMPLER_CREATE_INFO                                     = 31
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO                       = 32
	STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO                             = 33
	STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO                            = 34
	STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET                                    = 35
	STRUCTURE_TYPE_COPY_DESCRIPTOR_SET                                     = 36
	STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO                                 = 37
	STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO                                 = 38
	STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO                                = 39
	STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO                            = 40
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO                         = 41
	STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO                               = 42
	STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO                                  = 43
	STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER                                   = 44
	STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER                                    = 45
	STRUCTURE_TYPE_MEMORY_BARRIER                                          = 46
	// Reserved for internal use by the loader, layers, and ICDs
	STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47
	// Reserved for internal use by the loader, layers, and ICDs
	STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO                             = 48
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES                  = 1053000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES                    = 1053000
	STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO                     = 1053000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2                          = 1059000
	STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2                      = 1059000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2                   = 1059000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2                   = 1059000
	STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2                             = 1059000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2                            = 1059000
	STRUCTURE_TYPE_FORMAT_PROPERTIES_2                                   = 1059000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2            = 1059000
	STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2                             = 1059000
	STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO                              = 1060000
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO                   = 1060000
	STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO                            = 1060000
	STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO                = 1060000
	STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO                  = 1060000
	STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO                   = 1060000
	STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO                         = 1060000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES       = 1063000
	STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO                       = 1070000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES                      = 1070000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES                         = 1071000
	STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES                            = 1071000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO                  = 1071000
	STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES                      = 1071000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO            = 1071000
	STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO                    = 1072000
	STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO                     = 1072000
	STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO                           = 1072000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO               = 1076000
	STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES                         = 1076000
	STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO                          = 1077000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES                = 1083000
	STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO                = 1085000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES                   = 1094000
	STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES                             = 1112000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO                   = 1112000
	STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO                              = 1113000
	STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO                          = 1117000
	STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = 1117000
	STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO       = 1117000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES             = 1117000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES            = 1120000
	STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS                         = 1127000
	STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO                        = 1127000
	STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO                                 = 1145000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES             = 1145000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES           = 1145000
	STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2                                   = 1145000
	STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2               = 1146000
	STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2                                 = 1146000
	STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2                      = 1146000
	STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2                    = 1146000
	STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2                     = 1146000
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES      = 1156000
	STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO                  = 1156000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES     = 1156000
	STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO                          = 1156000
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO                  = 1156000
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO                         = 1156000
	STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO                               = 1157000
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO                                = 1157000
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT                         = 1168000
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES              = 1168000
)

type SubgroupFeatureFlagBits = SubgroupFeatureFlags

const (
	SUBGROUP_FEATURE_BASIC_BIT            SubgroupFeatureFlagBits = 1 << 0
	SUBGROUP_FEATURE_VOTE_BIT                                     = 1 << 1
	SUBGROUP_FEATURE_ARITHMETIC_BIT                               = 1 << 2
	SUBGROUP_FEATURE_BALLOT_BIT                                   = 1 << 3
	SUBGROUP_FEATURE_SHUFFLE_BIT                                  = 1 << 4
	SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT                         = 1 << 5
	SUBGROUP_FEATURE_CLUSTERED_BIT                                = 1 << 6
	SUBGROUP_FEATURE_QUAD_BIT                                     = 1 << 7
)

type SubpassDescriptionFlagBits = SubpassDescriptionFlags
type SurfaceTransformFlagBitsKHR = SurfaceTransformFlagsKHR

const (
	SURFACE_TRANSFORM_IDENTITY_BIT_KHR                     SurfaceTransformFlagBitsKHR = 1 << 0
	SURFACE_TRANSFORM_ROTATE_90_BIT_KHR                                                = 1 << 1
	SURFACE_TRANSFORM_ROTATE_180_BIT_KHR                                               = 1 << 2
	SURFACE_TRANSFORM_ROTATE_270_BIT_KHR                                               = 1 << 3
	SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR                                        = 1 << 4
	SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR                              = 1 << 5
	SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR                             = 1 << 6
	SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR                             = 1 << 7
	SURFACE_TRANSFORM_INHERIT_BIT_KHR                                                  = 1 << 8
)

// SystemAllocationScope: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSystemAllocationScope.html
type SystemAllocationScope int32

const (
	SYSTEM_ALLOCATION_SCOPE_COMMAND  SystemAllocationScope = 0
	SYSTEM_ALLOCATION_SCOPE_OBJECT                         = 1
	SYSTEM_ALLOCATION_SCOPE_CACHE                          = 2
	SYSTEM_ALLOCATION_SCOPE_DEVICE                         = 3
	SYSTEM_ALLOCATION_SCOPE_INSTANCE                       = 4
)

// TessellationDomainOrigin: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkTessellationDomainOrigin.html
type TessellationDomainOrigin int32

const (
	TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT TessellationDomainOrigin = 0
	TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT                          = 1
)

// VendorId: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVendorId.html
type VendorId int32

const (
	// Vivante vendor ID
	VENDOR_ID_VIV VendorId = 0x10001
	// VeriSilicon vendor ID
	VENDOR_ID_VSI = 0x10002
	// Kazan Software Renderer
	VENDOR_ID_KAZAN = 0x10003
	// Codeplay Software Ltd. vendor ID
	VENDOR_ID_CODEPLAY = 0x10004
	// Mesa vendor ID
	VENDOR_ID_MESA = 0x10005
	// PoCL vendor ID
	VENDOR_ID_POCL = 0x10006
)

// VertexInputRate: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVertexInputRate.html
type VertexInputRate int32

const (
	VERTEX_INPUT_RATE_VERTEX   VertexInputRate = 0
	VERTEX_INPUT_RATE_INSTANCE                 = 1
)
