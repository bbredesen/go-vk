// Code generated by "stringer -output=enum_string_1.go -type=ExternalSemaphoreHandleTypeFlagBits,FenceCreateFlagBits,FenceImportFlagBits,Filter,Format,FormatFeatureFlagBits,FrontFace,ImageAspectFlagBits,ImageCreateFlagBits,ImageLayout,ImageTiling,ImageType,ImageUsageFlagBits,ImageViewType,InternalAllocationType,LogicOp,MemoryAllocateFlagBits,MemoryHeapFlagBits,MemoryPropertyFlagBits,ObjectType,PeerMemoryFeatureFlagBits,PhysicalDeviceType,PipelineBindPoint,PipelineCacheHeaderVersion,PipelineCreateFlagBits,PipelineStageFlagBits,PointClippingBehavior,PolygonMode,PresentModeKHR,PrimitiveTopology,QueryControlFlagBits"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT-1]
}

const _ExternalSemaphoreHandleTypeFlagBits_name = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT"

var _ExternalSemaphoreHandleTypeFlagBits_index = [...]uint8{0, 44}

func (i ExternalSemaphoreHandleTypeFlagBits) String() string {
	i -= 1
	if i >= ExternalSemaphoreHandleTypeFlagBits(len(_ExternalSemaphoreHandleTypeFlagBits_index)-1) {
		return "ExternalSemaphoreHandleTypeFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExternalSemaphoreHandleTypeFlagBits_name[_ExternalSemaphoreHandleTypeFlagBits_index[i]:_ExternalSemaphoreHandleTypeFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FENCE_CREATE_SIGNALED_BIT-1]
}

const _FenceCreateFlagBits_name = "FENCE_CREATE_SIGNALED_BIT"

var _FenceCreateFlagBits_index = [...]uint8{0, 25}

func (i FenceCreateFlagBits) String() string {
	i -= 1
	if i >= FenceCreateFlagBits(len(_FenceCreateFlagBits_index)-1) {
		return "FenceCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FenceCreateFlagBits_name[_FenceCreateFlagBits_index[i]:_FenceCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FENCE_IMPORT_TEMPORARY_BIT-1]
}

const _FenceImportFlagBits_name = "FENCE_IMPORT_TEMPORARY_BIT"

var _FenceImportFlagBits_index = [...]uint8{0, 26}

func (i FenceImportFlagBits) String() string {
	i -= 1
	if i >= FenceImportFlagBits(len(_FenceImportFlagBits_index)-1) {
		return "FenceImportFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FenceImportFlagBits_name[_FenceImportFlagBits_index[i]:_FenceImportFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILTER_NEAREST-0]
}

const _Filter_name = "FILTER_NEAREST"

var _Filter_index = [...]uint8{0, 14}

func (i Filter) String() string {
	if i < 0 || i >= Filter(len(_Filter_index)-1) {
		return "Filter(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Filter_name[_Filter_index[i]:_Filter_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_UNDEFINED-0]
}

const _Format_name = "FORMAT_UNDEFINED"

var _Format_index = [...]uint8{0, 16}

func (i Format) String() string {
	if i < 0 || i >= Format(len(_Format_index)-1) {
		return "Format(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Format_name[_Format_index[i]:_Format_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_BIT-1]
}

const _FormatFeatureFlagBits_name = "FORMAT_FEATURE_SAMPLED_IMAGE_BIT"

var _FormatFeatureFlagBits_index = [...]uint8{0, 32}

func (i FormatFeatureFlagBits) String() string {
	i -= 1
	if i >= FormatFeatureFlagBits(len(_FormatFeatureFlagBits_index)-1) {
		return "FormatFeatureFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FormatFeatureFlagBits_name[_FormatFeatureFlagBits_index[i]:_FormatFeatureFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRONT_FACE_COUNTER_CLOCKWISE-0]
}

const _FrontFace_name = "FRONT_FACE_COUNTER_CLOCKWISE"

var _FrontFace_index = [...]uint8{0, 28}

func (i FrontFace) String() string {
	if i < 0 || i >= FrontFace(len(_FrontFace_index)-1) {
		return "FrontFace(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FrontFace_name[_FrontFace_index[i]:_FrontFace_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_ASPECT_COLOR_BIT-1]
}

const _ImageAspectFlagBits_name = "IMAGE_ASPECT_COLOR_BIT"

var _ImageAspectFlagBits_index = [...]uint8{0, 22}

func (i ImageAspectFlagBits) String() string {
	i -= 1
	if i >= ImageAspectFlagBits(len(_ImageAspectFlagBits_index)-1) {
		return "ImageAspectFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ImageAspectFlagBits_name[_ImageAspectFlagBits_index[i]:_ImageAspectFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_CREATE_SPARSE_BINDING_BIT-1]
}

const _ImageCreateFlagBits_name = "IMAGE_CREATE_SPARSE_BINDING_BIT"

var _ImageCreateFlagBits_index = [...]uint8{0, 31}

func (i ImageCreateFlagBits) String() string {
	i -= 1
	if i >= ImageCreateFlagBits(len(_ImageCreateFlagBits_index)-1) {
		return "ImageCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ImageCreateFlagBits_name[_ImageCreateFlagBits_index[i]:_ImageCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_LAYOUT_UNDEFINED-0]
}

const _ImageLayout_name = "IMAGE_LAYOUT_UNDEFINED"

var _ImageLayout_index = [...]uint8{0, 22}

func (i ImageLayout) String() string {
	if i < 0 || i >= ImageLayout(len(_ImageLayout_index)-1) {
		return "ImageLayout(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageLayout_name[_ImageLayout_index[i]:_ImageLayout_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_TILING_OPTIMAL-0]
}

const _ImageTiling_name = "IMAGE_TILING_OPTIMAL"

var _ImageTiling_index = [...]uint8{0, 20}

func (i ImageTiling) String() string {
	if i < 0 || i >= ImageTiling(len(_ImageTiling_index)-1) {
		return "ImageTiling(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageTiling_name[_ImageTiling_index[i]:_ImageTiling_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_TYPE_1D-0]
}

const _ImageType_name = "IMAGE_TYPE_1D"

var _ImageType_index = [...]uint8{0, 13}

func (i ImageType) String() string {
	if i < 0 || i >= ImageType(len(_ImageType_index)-1) {
		return "ImageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageType_name[_ImageType_index[i]:_ImageType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_USAGE_TRANSFER_SRC_BIT-1]
}

const _ImageUsageFlagBits_name = "IMAGE_USAGE_TRANSFER_SRC_BIT"

var _ImageUsageFlagBits_index = [...]uint8{0, 28}

func (i ImageUsageFlagBits) String() string {
	i -= 1
	if i >= ImageUsageFlagBits(len(_ImageUsageFlagBits_index)-1) {
		return "ImageUsageFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ImageUsageFlagBits_name[_ImageUsageFlagBits_index[i]:_ImageUsageFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_VIEW_TYPE_1D-0]
}

const _ImageViewType_name = "IMAGE_VIEW_TYPE_1D"

var _ImageViewType_index = [...]uint8{0, 18}

func (i ImageViewType) String() string {
	if i < 0 || i >= ImageViewType(len(_ImageViewType_index)-1) {
		return "ImageViewType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageViewType_name[_ImageViewType_index[i]:_ImageViewType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INTERNAL_ALLOCATION_TYPE_EXECUTABLE-0]
}

const _InternalAllocationType_name = "INTERNAL_ALLOCATION_TYPE_EXECUTABLE"

var _InternalAllocationType_index = [...]uint8{0, 35}

func (i InternalAllocationType) String() string {
	if i < 0 || i >= InternalAllocationType(len(_InternalAllocationType_index)-1) {
		return "InternalAllocationType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InternalAllocationType_name[_InternalAllocationType_index[i]:_InternalAllocationType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LOGIC_OP_CLEAR-0]
}

const _LogicOp_name = "LOGIC_OP_CLEAR"

var _LogicOp_index = [...]uint8{0, 14}

func (i LogicOp) String() string {
	if i < 0 || i >= LogicOp(len(_LogicOp_index)-1) {
		return "LogicOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LogicOp_name[_LogicOp_index[i]:_LogicOp_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_ALLOCATE_DEVICE_MASK_BIT-1]
}

const _MemoryAllocateFlagBits_name = "MEMORY_ALLOCATE_DEVICE_MASK_BIT"

var _MemoryAllocateFlagBits_index = [...]uint8{0, 31}

func (i MemoryAllocateFlagBits) String() string {
	i -= 1
	if i >= MemoryAllocateFlagBits(len(_MemoryAllocateFlagBits_index)-1) {
		return "MemoryAllocateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryAllocateFlagBits_name[_MemoryAllocateFlagBits_index[i]:_MemoryAllocateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_HEAP_DEVICE_LOCAL_BIT-1]
}

const _MemoryHeapFlagBits_name = "MEMORY_HEAP_DEVICE_LOCAL_BIT"

var _MemoryHeapFlagBits_index = [...]uint8{0, 28}

func (i MemoryHeapFlagBits) String() string {
	i -= 1
	if i >= MemoryHeapFlagBits(len(_MemoryHeapFlagBits_index)-1) {
		return "MemoryHeapFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryHeapFlagBits_name[_MemoryHeapFlagBits_index[i]:_MemoryHeapFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_PROPERTY_DEVICE_LOCAL_BIT-1]
}

const _MemoryPropertyFlagBits_name = "MEMORY_PROPERTY_DEVICE_LOCAL_BIT"

var _MemoryPropertyFlagBits_index = [...]uint8{0, 32}

func (i MemoryPropertyFlagBits) String() string {
	i -= 1
	if i >= MemoryPropertyFlagBits(len(_MemoryPropertyFlagBits_index)-1) {
		return "MemoryPropertyFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryPropertyFlagBits_name[_MemoryPropertyFlagBits_index[i]:_MemoryPropertyFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OBJECT_TYPE_UNKNOWN-0]
}

const _ObjectType_name = "OBJECT_TYPE_UNKNOWN"

var _ObjectType_index = [...]uint8{0, 19}

func (i ObjectType) String() string {
	if i < 0 || i >= ObjectType(len(_ObjectType_index)-1) {
		return "ObjectType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ObjectType_name[_ObjectType_index[i]:_ObjectType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PEER_MEMORY_FEATURE_COPY_SRC_BIT-1]
}

const _PeerMemoryFeatureFlagBits_name = "PEER_MEMORY_FEATURE_COPY_SRC_BIT"

var _PeerMemoryFeatureFlagBits_index = [...]uint8{0, 32}

func (i PeerMemoryFeatureFlagBits) String() string {
	i -= 1
	if i >= PeerMemoryFeatureFlagBits(len(_PeerMemoryFeatureFlagBits_index)-1) {
		return "PeerMemoryFeatureFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PeerMemoryFeatureFlagBits_name[_PeerMemoryFeatureFlagBits_index[i]:_PeerMemoryFeatureFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PHYSICAL_DEVICE_TYPE_OTHER-0]
}

const _PhysicalDeviceType_name = "PHYSICAL_DEVICE_TYPE_OTHER"

var _PhysicalDeviceType_index = [...]uint8{0, 26}

func (i PhysicalDeviceType) String() string {
	if i < 0 || i >= PhysicalDeviceType(len(_PhysicalDeviceType_index)-1) {
		return "PhysicalDeviceType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PhysicalDeviceType_name[_PhysicalDeviceType_index[i]:_PhysicalDeviceType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_BIND_POINT_GRAPHICS-0]
}

const _PipelineBindPoint_name = "PIPELINE_BIND_POINT_GRAPHICS"

var _PipelineBindPoint_index = [...]uint8{0, 28}

func (i PipelineBindPoint) String() string {
	if i < 0 || i >= PipelineBindPoint(len(_PipelineBindPoint_index)-1) {
		return "PipelineBindPoint(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineBindPoint_name[_PipelineBindPoint_index[i]:_PipelineBindPoint_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CACHE_HEADER_VERSION_ONE-1]
}

const _PipelineCacheHeaderVersion_name = "PIPELINE_CACHE_HEADER_VERSION_ONE"

var _PipelineCacheHeaderVersion_index = [...]uint8{0, 33}

func (i PipelineCacheHeaderVersion) String() string {
	i -= 1
	if i < 0 || i >= PipelineCacheHeaderVersion(len(_PipelineCacheHeaderVersion_index)-1) {
		return "PipelineCacheHeaderVersion(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineCacheHeaderVersion_name[_PipelineCacheHeaderVersion_index[i]:_PipelineCacheHeaderVersion_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT-1]
}

const _PipelineCreateFlagBits_name = "PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT"

var _PipelineCreateFlagBits_index = [...]uint8{0, 40}

func (i PipelineCreateFlagBits) String() string {
	i -= 1
	if i >= PipelineCreateFlagBits(len(_PipelineCreateFlagBits_index)-1) {
		return "PipelineCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineCreateFlagBits_name[_PipelineCreateFlagBits_index[i]:_PipelineCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_TOP_OF_PIPE_BIT-1]
}

const _PipelineStageFlagBits_name = "PIPELINE_STAGE_TOP_OF_PIPE_BIT"

var _PipelineStageFlagBits_index = [...]uint8{0, 30}

func (i PipelineStageFlagBits) String() string {
	i -= 1
	if i >= PipelineStageFlagBits(len(_PipelineStageFlagBits_index)-1) {
		return "PipelineStageFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineStageFlagBits_name[_PipelineStageFlagBits_index[i]:_PipelineStageFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES-0]
}

const _PointClippingBehavior_name = "POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES"

var _PointClippingBehavior_index = [...]uint8{0, 39}

func (i PointClippingBehavior) String() string {
	if i < 0 || i >= PointClippingBehavior(len(_PointClippingBehavior_index)-1) {
		return "PointClippingBehavior(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PointClippingBehavior_name[_PointClippingBehavior_index[i]:_PointClippingBehavior_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POLYGON_MODE_FILL-0]
}

const _PolygonMode_name = "POLYGON_MODE_FILL"

var _PolygonMode_index = [...]uint8{0, 17}

func (i PolygonMode) String() string {
	if i < 0 || i >= PolygonMode(len(_PolygonMode_index)-1) {
		return "PolygonMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PolygonMode_name[_PolygonMode_index[i]:_PolygonMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_MODE_IMMEDIATE_KHR-0]
}

const _PresentModeKHR_name = "PRESENT_MODE_IMMEDIATE_KHR"

var _PresentModeKHR_index = [...]uint8{0, 26}

func (i PresentModeKHR) String() string {
	if i < 0 || i >= PresentModeKHR(len(_PresentModeKHR_index)-1) {
		return "PresentModeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PresentModeKHR_name[_PresentModeKHR_index[i]:_PresentModeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRIMITIVE_TOPOLOGY_POINT_LIST-0]
}

const _PrimitiveTopology_name = "PRIMITIVE_TOPOLOGY_POINT_LIST"

var _PrimitiveTopology_index = [...]uint8{0, 29}

func (i PrimitiveTopology) String() string {
	if i < 0 || i >= PrimitiveTopology(len(_PrimitiveTopology_index)-1) {
		return "PrimitiveTopology(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrimitiveTopology_name[_PrimitiveTopology_index[i]:_PrimitiveTopology_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_CONTROL_PRECISE_BIT-1]
}

const _QueryControlFlagBits_name = "QUERY_CONTROL_PRECISE_BIT"

var _QueryControlFlagBits_index = [...]uint8{0, 25}

func (i QueryControlFlagBits) String() string {
	i -= 1
	if i >= QueryControlFlagBits(len(_QueryControlFlagBits_index)-1) {
		return "QueryControlFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _QueryControlFlagBits_name[_QueryControlFlagBits_index[i]:_QueryControlFlagBits_index[i+1]]
}
