// Code generated by "stringer -output=enum_string_4.go -type=OpticalFlowUsageFlagBitsNV,PeerMemoryFeatureFlagBits,PerformanceConfigurationTypeINTEL,PerformanceCounterDescriptionFlagBitsKHR,PerformanceCounterScopeKHR,PerformanceCounterStorageKHR,PerformanceCounterUnitKHR,PerformanceOverrideTypeINTEL,PerformanceParameterTypeINTEL,PerformanceValueTypeINTEL,PhysicalDeviceType,PipelineBindPoint,PipelineCacheCreateFlagBits,PipelineCacheHeaderVersion,PipelineColorBlendStateCreateFlagBits,PipelineCreateFlagBits,PipelineCreationFeedbackFlagBits,PipelineDepthStencilStateCreateFlagBits,PipelineExecutableStatisticFormatKHR,PipelineLayoutCreateFlagBits,PipelineRobustnessBufferBehaviorEXT,PipelineRobustnessImageBehaviorEXT,PipelineShaderStageCreateFlagBits,PipelineStageFlagBits,PipelineStageFlagBits2,PointClippingBehavior,PolygonMode,PresentGravityFlagBitsEXT,PresentModeKHR,PresentScalingFlagBitsEXT,PrimitiveTopology"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OPTICAL_FLOW_USAGE_UNKNOWN_NV-0]
	_ = x[OPTICAL_FLOW_USAGE_INPUT_BIT_NV-1]
	_ = x[OPTICAL_FLOW_USAGE_OUTPUT_BIT_NV-2]
	_ = x[OPTICAL_FLOW_USAGE_HINT_BIT_NV-4]
	_ = x[OPTICAL_FLOW_USAGE_COST_BIT_NV-8]
	_ = x[OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV-16]
}

const (
	_OpticalFlowUsageFlagBitsNV_name_0 = "OPTICAL_FLOW_USAGE_UNKNOWN_NVOPTICAL_FLOW_USAGE_INPUT_BIT_NVOPTICAL_FLOW_USAGE_OUTPUT_BIT_NV"
	_OpticalFlowUsageFlagBitsNV_name_1 = "OPTICAL_FLOW_USAGE_HINT_BIT_NV"
	_OpticalFlowUsageFlagBitsNV_name_2 = "OPTICAL_FLOW_USAGE_COST_BIT_NV"
	_OpticalFlowUsageFlagBitsNV_name_3 = "OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV"
)

var (
	_OpticalFlowUsageFlagBitsNV_index_0 = [...]uint8{0, 29, 60, 92}
)

func (i OpticalFlowUsageFlagBitsNV) String() string {
	switch {
	case i <= 2:
		return _OpticalFlowUsageFlagBitsNV_name_0[_OpticalFlowUsageFlagBitsNV_index_0[i]:_OpticalFlowUsageFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _OpticalFlowUsageFlagBitsNV_name_1
	case i == 8:
		return _OpticalFlowUsageFlagBitsNV_name_2
	case i == 16:
		return _OpticalFlowUsageFlagBitsNV_name_3
	default:
		return "OpticalFlowUsageFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PEER_MEMORY_FEATURE_COPY_SRC_BIT-1]
	_ = x[PEER_MEMORY_FEATURE_COPY_DST_BIT-2]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_SRC_BIT-4]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_DST_BIT-8]
	_ = x[PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR-2]
	_ = x[PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR-1]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR-8]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR-4]
}

const (
	_PeerMemoryFeatureFlagBits_name_0 = "PEER_MEMORY_FEATURE_COPY_SRC_BITPEER_MEMORY_FEATURE_COPY_DST_BIT"
	_PeerMemoryFeatureFlagBits_name_1 = "PEER_MEMORY_FEATURE_GENERIC_SRC_BIT"
	_PeerMemoryFeatureFlagBits_name_2 = "PEER_MEMORY_FEATURE_GENERIC_DST_BIT"
)

var (
	_PeerMemoryFeatureFlagBits_index_0 = [...]uint8{0, 32, 64}
)

func (i PeerMemoryFeatureFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PeerMemoryFeatureFlagBits_name_0[_PeerMemoryFeatureFlagBits_index_0[i]:_PeerMemoryFeatureFlagBits_index_0[i+1]]
	case i == 4:
		return _PeerMemoryFeatureFlagBits_name_1
	case i == 8:
		return _PeerMemoryFeatureFlagBits_name_2
	default:
		return "PeerMemoryFeatureFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL-0]
}

const _PerformanceConfigurationTypeINTEL_name = "PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL"

var _PerformanceConfigurationTypeINTEL_index = [...]uint8{0, 78}

func (i PerformanceConfigurationTypeINTEL) String() string {
	if i < 0 || i >= PerformanceConfigurationTypeINTEL(len(_PerformanceConfigurationTypeINTEL_index)-1) {
		return "PerformanceConfigurationTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceConfigurationTypeINTEL_name[_PerformanceConfigurationTypeINTEL_index[i]:_PerformanceConfigurationTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR-1]
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR-2]
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR-2]
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR-1]
}

const _PerformanceCounterDescriptionFlagBitsKHR_name = "PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHRPERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR"

var _PerformanceCounterDescriptionFlagBitsKHR_index = [...]uint8{0, 61, 122}

func (i PerformanceCounterDescriptionFlagBitsKHR) String() string {
	i -= 1
	if i >= PerformanceCounterDescriptionFlagBitsKHR(len(_PerformanceCounterDescriptionFlagBitsKHR_index)-1) {
		return "PerformanceCounterDescriptionFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PerformanceCounterDescriptionFlagBitsKHR_name[_PerformanceCounterDescriptionFlagBitsKHR_index[i]:_PerformanceCounterDescriptionFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR-0]
	_ = x[PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR-1]
	_ = x[PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR-2]
	_ = x[QUERY_SCOPE_COMMAND_BUFFER_KHR-0]
	_ = x[QUERY_SCOPE_COMMAND_KHR-2]
	_ = x[QUERY_SCOPE_RENDER_PASS_KHR-1]
}

const _PerformanceCounterScopeKHR_name = "PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHRPERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHRPERFORMANCE_COUNTER_SCOPE_COMMAND_KHR"

var _PerformanceCounterScopeKHR_index = [...]uint8{0, 44, 85, 122}

func (i PerformanceCounterScopeKHR) String() string {
	if i < 0 || i >= PerformanceCounterScopeKHR(len(_PerformanceCounterScopeKHR_index)-1) {
		return "PerformanceCounterScopeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceCounterScopeKHR_name[_PerformanceCounterScopeKHR_index[i]:_PerformanceCounterScopeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_STORAGE_INT32_KHR-0]
	_ = x[PERFORMANCE_COUNTER_STORAGE_INT64_KHR-1]
	_ = x[PERFORMANCE_COUNTER_STORAGE_UINT32_KHR-2]
	_ = x[PERFORMANCE_COUNTER_STORAGE_UINT64_KHR-3]
	_ = x[PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR-4]
	_ = x[PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR-5]
}

const _PerformanceCounterStorageKHR_name = "PERFORMANCE_COUNTER_STORAGE_INT32_KHRPERFORMANCE_COUNTER_STORAGE_INT64_KHRPERFORMANCE_COUNTER_STORAGE_UINT32_KHRPERFORMANCE_COUNTER_STORAGE_UINT64_KHRPERFORMANCE_COUNTER_STORAGE_FLOAT32_KHRPERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR"

var _PerformanceCounterStorageKHR_index = [...]uint8{0, 37, 74, 112, 150, 189, 228}

func (i PerformanceCounterStorageKHR) String() string {
	if i < 0 || i >= PerformanceCounterStorageKHR(len(_PerformanceCounterStorageKHR_index)-1) {
		return "PerformanceCounterStorageKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceCounterStorageKHR_name[_PerformanceCounterStorageKHR_index[i]:_PerformanceCounterStorageKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_UNIT_GENERIC_KHR-0]
	_ = x[PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR-1]
	_ = x[PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR-2]
	_ = x[PERFORMANCE_COUNTER_UNIT_BYTES_KHR-3]
	_ = x[PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR-4]
	_ = x[PERFORMANCE_COUNTER_UNIT_KELVIN_KHR-5]
	_ = x[PERFORMANCE_COUNTER_UNIT_WATTS_KHR-6]
	_ = x[PERFORMANCE_COUNTER_UNIT_VOLTS_KHR-7]
	_ = x[PERFORMANCE_COUNTER_UNIT_AMPS_KHR-8]
	_ = x[PERFORMANCE_COUNTER_UNIT_HERTZ_KHR-9]
	_ = x[PERFORMANCE_COUNTER_UNIT_CYCLES_KHR-10]
}

const _PerformanceCounterUnitKHR_name = "PERFORMANCE_COUNTER_UNIT_GENERIC_KHRPERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHRPERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHRPERFORMANCE_COUNTER_UNIT_BYTES_KHRPERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHRPERFORMANCE_COUNTER_UNIT_KELVIN_KHRPERFORMANCE_COUNTER_UNIT_WATTS_KHRPERFORMANCE_COUNTER_UNIT_VOLTS_KHRPERFORMANCE_COUNTER_UNIT_AMPS_KHRPERFORMANCE_COUNTER_UNIT_HERTZ_KHRPERFORMANCE_COUNTER_UNIT_CYCLES_KHR"

var _PerformanceCounterUnitKHR_index = [...]uint16{0, 36, 75, 115, 149, 194, 229, 263, 297, 330, 364, 399}

func (i PerformanceCounterUnitKHR) String() string {
	if i < 0 || i >= PerformanceCounterUnitKHR(len(_PerformanceCounterUnitKHR_index)-1) {
		return "PerformanceCounterUnitKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceCounterUnitKHR_name[_PerformanceCounterUnitKHR_index[i]:_PerformanceCounterUnitKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL-0]
	_ = x[PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL-1]
}

const _PerformanceOverrideTypeINTEL_name = "PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTELPERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL"

var _PerformanceOverrideTypeINTEL_index = [...]uint8{0, 45, 93}

func (i PerformanceOverrideTypeINTEL) String() string {
	if i < 0 || i >= PerformanceOverrideTypeINTEL(len(_PerformanceOverrideTypeINTEL_index)-1) {
		return "PerformanceOverrideTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceOverrideTypeINTEL_name[_PerformanceOverrideTypeINTEL_index[i]:_PerformanceOverrideTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL-0]
	_ = x[PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL-1]
}

const _PerformanceParameterTypeINTEL_name = "PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTELPERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL"

var _PerformanceParameterTypeINTEL_index = [...]uint8{0, 54, 111}

func (i PerformanceParameterTypeINTEL) String() string {
	if i < 0 || i >= PerformanceParameterTypeINTEL(len(_PerformanceParameterTypeINTEL_index)-1) {
		return "PerformanceParameterTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceParameterTypeINTEL_name[_PerformanceParameterTypeINTEL_index[i]:_PerformanceParameterTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_VALUE_TYPE_UINT32_INTEL-0]
	_ = x[PERFORMANCE_VALUE_TYPE_UINT64_INTEL-1]
	_ = x[PERFORMANCE_VALUE_TYPE_FLOAT_INTEL-2]
	_ = x[PERFORMANCE_VALUE_TYPE_BOOL_INTEL-3]
	_ = x[PERFORMANCE_VALUE_TYPE_STRING_INTEL-4]
}

const _PerformanceValueTypeINTEL_name = "PERFORMANCE_VALUE_TYPE_UINT32_INTELPERFORMANCE_VALUE_TYPE_UINT64_INTELPERFORMANCE_VALUE_TYPE_FLOAT_INTELPERFORMANCE_VALUE_TYPE_BOOL_INTELPERFORMANCE_VALUE_TYPE_STRING_INTEL"

var _PerformanceValueTypeINTEL_index = [...]uint8{0, 35, 70, 104, 137, 172}

func (i PerformanceValueTypeINTEL) String() string {
	if i < 0 || i >= PerformanceValueTypeINTEL(len(_PerformanceValueTypeINTEL_index)-1) {
		return "PerformanceValueTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceValueTypeINTEL_name[_PerformanceValueTypeINTEL_index[i]:_PerformanceValueTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PHYSICAL_DEVICE_TYPE_OTHER-0]
	_ = x[PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU-1]
	_ = x[PHYSICAL_DEVICE_TYPE_DISCRETE_GPU-2]
	_ = x[PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU-3]
	_ = x[PHYSICAL_DEVICE_TYPE_CPU-4]
}

const _PhysicalDeviceType_name = "PHYSICAL_DEVICE_TYPE_OTHERPHYSICAL_DEVICE_TYPE_INTEGRATED_GPUPHYSICAL_DEVICE_TYPE_DISCRETE_GPUPHYSICAL_DEVICE_TYPE_VIRTUAL_GPUPHYSICAL_DEVICE_TYPE_CPU"

var _PhysicalDeviceType_index = [...]uint8{0, 26, 61, 94, 126, 150}

func (i PhysicalDeviceType) String() string {
	if i < 0 || i >= PhysicalDeviceType(len(_PhysicalDeviceType_index)-1) {
		return "PhysicalDeviceType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PhysicalDeviceType_name[_PhysicalDeviceType_index[i]:_PhysicalDeviceType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_BIND_POINT_GRAPHICS-0]
	_ = x[PIPELINE_BIND_POINT_COMPUTE-1]
	_ = x[PIPELINE_BIND_POINT_RAY_TRACING_KHR-1000347000]
	_ = x[PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI-1000369003]
	_ = x[PIPELINE_BIND_POINT_RAY_TRACING_NV-1000347000]
}

const (
	_PipelineBindPoint_name_0 = "PIPELINE_BIND_POINT_GRAPHICSPIPELINE_BIND_POINT_COMPUTE"
	_PipelineBindPoint_name_1 = "PIPELINE_BIND_POINT_RAY_TRACING_KHR"
	_PipelineBindPoint_name_2 = "PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI"
)

var (
	_PipelineBindPoint_index_0 = [...]uint8{0, 28, 55}
)

func (i PipelineBindPoint) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _PipelineBindPoint_name_0[_PipelineBindPoint_index_0[i]:_PipelineBindPoint_index_0[i+1]]
	case i == 1000347000:
		return _PipelineBindPoint_name_1
	case i == 1000369003:
		return _PipelineBindPoint_name_2
	default:
		return "PipelineBindPoint(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT-1]
	_ = x[PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT-1]
}

const _PipelineCacheCreateFlagBits_name = "PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT"

var _PipelineCacheCreateFlagBits_index = [...]uint8{0, 49}

func (i PipelineCacheCreateFlagBits) String() string {
	i -= 1
	if i >= PipelineCacheCreateFlagBits(len(_PipelineCacheCreateFlagBits_index)-1) {
		return "PipelineCacheCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineCacheCreateFlagBits_name[_PipelineCacheCreateFlagBits_index[i]:_PipelineCacheCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CACHE_HEADER_VERSION_ONE-1]
}

const _PipelineCacheHeaderVersion_name = "PIPELINE_CACHE_HEADER_VERSION_ONE"

var _PipelineCacheHeaderVersion_index = [...]uint8{0, 33}

func (i PipelineCacheHeaderVersion) String() string {
	i -= 1
	if i < 0 || i >= PipelineCacheHeaderVersion(len(_PipelineCacheHeaderVersion_index)-1) {
		return "PipelineCacheHeaderVersion(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineCacheHeaderVersion_name[_PipelineCacheHeaderVersion_index[i]:_PipelineCacheHeaderVersion_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT-1000463000]
	_ = x[PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM-1000463000]
}

const _PipelineColorBlendStateCreateFlagBits_name = "PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT"

var _PipelineColorBlendStateCreateFlagBits_index = [...]uint8{0, 79}

func (i PipelineColorBlendStateCreateFlagBits) String() string {
	i -= 1000463000
	if i >= PipelineColorBlendStateCreateFlagBits(len(_PipelineColorBlendStateCreateFlagBits_index)-1) {
		return "PipelineColorBlendStateCreateFlagBits(" + strconv.FormatInt(int64(i+1000463000), 10) + ")"
	}
	return _PipelineColorBlendStateCreateFlagBits_name[_PipelineColorBlendStateCreateFlagBits_index[i]:_PipelineColorBlendStateCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT-1]
	_ = x[PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT-2]
	_ = x[PIPELINE_CREATE_DERIVATIVE_BIT-4]
	_ = x[PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT-8]
	_ = x[PIPELINE_CREATE_DISPATCH_BASE_BIT-16]
	_ = x[PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT-256]
	_ = x[PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT-512]
	_ = x[PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT-1000044000]
	_ = x[PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000044000]
	_ = x[PIPELINE_CREATE_DEFER_COMPILE_BIT_NV-1000165000]
	_ = x[PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR-1000269000]
	_ = x[PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR-1000269000]
	_ = x[PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV-1000277000]
	_ = x[PIPELINE_CREATE_LIBRARY_BIT_KHR-1000290000]
	_ = x[PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT-1000316000]
	_ = x[PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT-1000320000]
	_ = x[PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT-1000320000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV-1000327000]
	_ = x[PIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT-1000339000]
	_ = x[PIPELINE_CREATE_DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT-1000339000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXT-1000396000]
	_ = x[PIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT-1000466000]
	_ = x[PIPELINE_CREATE_NO_PROTECTED_ACCESS_BIT_EXT-1000466000]
	_ = x[PIPELINE_CREATE_DISPATCH_BASE_KHR-16]
	_ = x[PIPELINE_CREATE_DISPATCH_BASE-16]
	_ = x[PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT-512]
	_ = x[PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT-256]
	_ = x[PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT-1000044000]
	_ = x[PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000044000]
	_ = x[PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR-8]
}

const _PipelineCreateFlagBits_name = "PIPELINE_CREATE_DISABLE_OPTIMIZATION_BITPIPELINE_CREATE_ALLOW_DERIVATIVES_BITPIPELINE_CREATE_DERIVATIVE_BITPIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BITPIPELINE_CREATE_DISPATCH_BASE_BITPIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BITPIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BITPIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXTPIPELINE_CREATE_DEFER_COMPILE_BIT_NVPIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHRPIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NVPIPELINE_CREATE_LIBRARY_BIT_KHRPIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXTPIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXTPIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NVPIPELINE_CREATE_COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXTPIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHRPIPELINE_CREATE_RAY_TRACING_OPACITY_MICROMAP_BIT_EXTPIPELINE_CREATE_PROTECTED_ACCESS_ONLY_BIT_EXT"

var _PipelineCreateFlagBits_map = map[PipelineCreateFlagBits]string{
	1:          _PipelineCreateFlagBits_name[0:40],
	2:          _PipelineCreateFlagBits_name[40:77],
	4:          _PipelineCreateFlagBits_name[77:107],
	8:          _PipelineCreateFlagBits_name[107:155],
	16:         _PipelineCreateFlagBits_name[155:188],
	256:        _PipelineCreateFlagBits_name[188:241],
	512:        _PipelineCreateFlagBits_name[241:284],
	1000044000: _PipelineCreateFlagBits_name[284:349],
	1000165000: _PipelineCreateFlagBits_name[349:385],
	1000269000: _PipelineCreateFlagBits_name[385:427],
	1000277000: _PipelineCreateFlagBits_name[427:467],
	1000290000: _PipelineCreateFlagBits_name[467:498],
	1000316000: _PipelineCreateFlagBits_name[498:539],
	1000320000: _PipelineCreateFlagBits_name[539:585],
	1000327000: _PipelineCreateFlagBits_name[585:632],
	1000339000: _PipelineCreateFlagBits_name[632:686],
	1000347000: _PipelineCreateFlagBits_name[686:749],
	1000396000: _PipelineCreateFlagBits_name[749:801],
	1000466000: _PipelineCreateFlagBits_name[801:846],
}

func (i PipelineCreateFlagBits) String() string {
	if str, ok := _PipelineCreateFlagBits_map[i]; ok {
		return str
	}
	return "PipelineCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CREATION_FEEDBACK_VALID_BIT-1]
	_ = x[PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT-2]
	_ = x[PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT-4]
	_ = x[PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT-2]
	_ = x[PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT-4]
	_ = x[PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT-1]
}

const (
	_PipelineCreationFeedbackFlagBits_name_0 = "PIPELINE_CREATION_FEEDBACK_VALID_BITPIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"
	_PipelineCreationFeedbackFlagBits_name_1 = "PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"
)

var (
	_PipelineCreationFeedbackFlagBits_index_0 = [...]uint8{0, 36, 97}
)

func (i PipelineCreationFeedbackFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PipelineCreationFeedbackFlagBits_name_0[_PipelineCreationFeedbackFlagBits_index_0[i]:_PipelineCreationFeedbackFlagBits_index_0[i+1]]
	case i == 4:
		return _PipelineCreationFeedbackFlagBits_name_1
	default:
		return "PipelineCreationFeedbackFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT-1000463000]
	_ = x[PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT-1000463000]
	_ = x[PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM-1000463000]
	_ = x[PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM-1000463000]
}

const _PipelineDepthStencilStateCreateFlagBits_name = "PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT"

var _PipelineDepthStencilStateCreateFlagBits_index = [...]uint8{0, 87}

func (i PipelineDepthStencilStateCreateFlagBits) String() string {
	i -= 1000463000
	if i >= PipelineDepthStencilStateCreateFlagBits(len(_PipelineDepthStencilStateCreateFlagBits_index)-1) {
		return "PipelineDepthStencilStateCreateFlagBits(" + strconv.FormatInt(int64(i+1000463000), 10) + ")"
	}
	return _PipelineDepthStencilStateCreateFlagBits_name[_PipelineDepthStencilStateCreateFlagBits_index[i]:_PipelineDepthStencilStateCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR-0]
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR-1]
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR-2]
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR-3]
}

const _PipelineExecutableStatisticFormatKHR_name = "PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHRPIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHRPIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHRPIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR"

var _PipelineExecutableStatisticFormatKHR_index = [...]uint8{0, 47, 93, 140, 188}

func (i PipelineExecutableStatisticFormatKHR) String() string {
	if i < 0 || i >= PipelineExecutableStatisticFormatKHR(len(_PipelineExecutableStatisticFormatKHR_index)-1) {
		return "PipelineExecutableStatisticFormatKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineExecutableStatisticFormatKHR_name[_PipelineExecutableStatisticFormatKHR_index[i]:_PipelineExecutableStatisticFormatKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT-1000320000]
}

const _PipelineLayoutCreateFlagBits_name = "PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT"

var _PipelineLayoutCreateFlagBits_index = [...]uint8{0, 47}

func (i PipelineLayoutCreateFlagBits) String() string {
	i -= 1000320000
	if i >= PipelineLayoutCreateFlagBits(len(_PipelineLayoutCreateFlagBits_index)-1) {
		return "PipelineLayoutCreateFlagBits(" + strconv.FormatInt(int64(i+1000320000), 10) + ")"
	}
	return _PipelineLayoutCreateFlagBits_name[_PipelineLayoutCreateFlagBits_index[i]:_PipelineLayoutCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT-0]
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT-1]
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT-2]
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT-3]
}

const _PipelineRobustnessBufferBehaviorEXT_name = "PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXTPIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXTPIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXTPIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT"

var _PipelineRobustnessBufferBehaviorEXT_index = [...]uint8{0, 54, 102, 162, 224}

func (i PipelineRobustnessBufferBehaviorEXT) String() string {
	if i < 0 || i >= PipelineRobustnessBufferBehaviorEXT(len(_PipelineRobustnessBufferBehaviorEXT_index)-1) {
		return "PipelineRobustnessBufferBehaviorEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineRobustnessBufferBehaviorEXT_name[_PipelineRobustnessBufferBehaviorEXT_index[i]:_PipelineRobustnessBufferBehaviorEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT-0]
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT-1]
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT-2]
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT-3]
}

const _PipelineRobustnessImageBehaviorEXT_name = "PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXTPIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXTPIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXTPIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT"

var _PipelineRobustnessImageBehaviorEXT_index = [...]uint8{0, 53, 100, 158, 218}

func (i PipelineRobustnessImageBehaviorEXT) String() string {
	if i < 0 || i >= PipelineRobustnessImageBehaviorEXT(len(_PipelineRobustnessImageBehaviorEXT_index)-1) {
		return "PipelineRobustnessImageBehaviorEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineRobustnessImageBehaviorEXT_name[_PipelineRobustnessImageBehaviorEXT_index[i]:_PipelineRobustnessImageBehaviorEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT-1]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT-2]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT-1]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT-2]
}

const _PipelineShaderStageCreateFlagBits_name = "PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BITPIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT"

var _PipelineShaderStageCreateFlagBits_index = [...]uint8{0, 60, 115}

func (i PipelineShaderStageCreateFlagBits) String() string {
	i -= 1
	if i >= PipelineShaderStageCreateFlagBits(len(_PipelineShaderStageCreateFlagBits_index)-1) {
		return "PipelineShaderStageCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineShaderStageCreateFlagBits_name[_PipelineShaderStageCreateFlagBits_index[i]:_PipelineShaderStageCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_NONE-0]
	_ = x[PIPELINE_STAGE_TOP_OF_PIPE_BIT-1]
	_ = x[PIPELINE_STAGE_DRAW_INDIRECT_BIT-2]
	_ = x[PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT-1024]
	_ = x[PIPELINE_STAGE_COMPUTE_SHADER_BIT-2048]
	_ = x[PIPELINE_STAGE_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT-8192]
	_ = x[PIPELINE_STAGE_HOST_BIT-16384]
	_ = x[PIPELINE_STAGE_ALL_GRAPHICS_BIT-32768]
	_ = x[PIPELINE_STAGE_ALL_COMMANDS_BIT-65536]
	_ = x[PIPELINE_STAGE_VERTEX_INPUT_BIT-4]
	_ = x[PIPELINE_STAGE_VERTEX_SHADER_BIT-8]
	_ = x[PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT-16]
	_ = x[PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT-32]
	_ = x[PIPELINE_STAGE_GEOMETRY_SHADER_BIT-64]
	_ = x[PIPELINE_STAGE_FRAGMENT_SHADER_BIT-128]
	_ = x[PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT-256]
	_ = x[PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT-512]
	_ = x[PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT-1000028000]
	_ = x[PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT-1000081000]
	_ = x[PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR-1000150000]
	_ = x[PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT-1000218000]
	_ = x[PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV-1000277000]
	_ = x[PIPELINE_STAGE_MESH_SHADER_BIT_EXT-1000328000]
	_ = x[PIPELINE_STAGE_TASK_SHADER_BIT_EXT-1000328000]
	_ = x[PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR-1000347000]
	_ = x[PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV-1000150000]
	_ = x[PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV-1000226000]
	_ = x[PIPELINE_STAGE_MESH_SHADER_BIT_NV-1000328000]
	_ = x[PIPELINE_STAGE_NONE_KHR-0]
	_ = x[PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV-1000347000]
	_ = x[PIPELINE_STAGE_TASK_SHADER_BIT_NV-1000328000]
}

const _PipelineStageFlagBits_name = "PIPELINE_STAGE_NONEPIPELINE_STAGE_TOP_OF_PIPE_BITPIPELINE_STAGE_DRAW_INDIRECT_BITPIPELINE_STAGE_VERTEX_INPUT_BITPIPELINE_STAGE_VERTEX_SHADER_BITPIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BITPIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BITPIPELINE_STAGE_GEOMETRY_SHADER_BITPIPELINE_STAGE_FRAGMENT_SHADER_BITPIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BITPIPELINE_STAGE_LATE_FRAGMENT_TESTS_BITPIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BITPIPELINE_STAGE_COMPUTE_SHADER_BITPIPELINE_STAGE_TRANSFER_BITPIPELINE_STAGE_BOTTOM_OF_PIPE_BITPIPELINE_STAGE_HOST_BITPIPELINE_STAGE_ALL_GRAPHICS_BITPIPELINE_STAGE_ALL_COMMANDS_BITPIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXTPIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXTPIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHRPIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXTPIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRPIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NVPIPELINE_STAGE_MESH_SHADER_BIT_EXTPIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR"

var _PipelineStageFlagBits_map = map[PipelineStageFlagBits]string{
	0:          _PipelineStageFlagBits_name[0:19],
	1:          _PipelineStageFlagBits_name[19:49],
	2:          _PipelineStageFlagBits_name[49:81],
	4:          _PipelineStageFlagBits_name[81:112],
	8:          _PipelineStageFlagBits_name[112:144],
	16:         _PipelineStageFlagBits_name[144:190],
	32:         _PipelineStageFlagBits_name[190:239],
	64:         _PipelineStageFlagBits_name[239:273],
	128:        _PipelineStageFlagBits_name[273:307],
	256:        _PipelineStageFlagBits_name[307:346],
	512:        _PipelineStageFlagBits_name[346:384],
	1024:       _PipelineStageFlagBits_name[384:426],
	2048:       _PipelineStageFlagBits_name[426:459],
	4096:       _PipelineStageFlagBits_name[459:486],
	8192:       _PipelineStageFlagBits_name[486:519],
	16384:      _PipelineStageFlagBits_name[519:542],
	32768:      _PipelineStageFlagBits_name[542:573],
	65536:      _PipelineStageFlagBits_name[573:604],
	1000028000: _PipelineStageFlagBits_name[604:645],
	1000081000: _PipelineStageFlagBits_name[645:689],
	1000150000: _PipelineStageFlagBits_name[689:740],
	1000218000: _PipelineStageFlagBits_name[740:787],
	1000226000: _PipelineStageFlagBits_name[787:842],
	1000277000: _PipelineStageFlagBits_name[842:882],
	1000328000: _PipelineStageFlagBits_name[882:916],
	1000347000: _PipelineStageFlagBits_name[916:957],
}

func (i PipelineStageFlagBits) String() string {
	if str, ok := _PipelineStageFlagBits_map[i]; ok {
		return str
	}
	return "PipelineStageFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_2_NONE-0]
	_ = x[PIPELINE_STAGE_2_TOP_OF_PIPE_BIT-1]
	_ = x[PIPELINE_STAGE_2_DRAW_INDIRECT_BIT-2]
	_ = x[PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT-1024]
	_ = x[PIPELINE_STAGE_2_COMPUTE_SHADER_BIT-2048]
	_ = x[PIPELINE_STAGE_2_ALL_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT-8192]
	_ = x[PIPELINE_STAGE_2_HOST_BIT-16384]
	_ = x[PIPELINE_STAGE_2_ALL_GRAPHICS_BIT-32768]
	_ = x[PIPELINE_STAGE_2_ALL_COMMANDS_BIT-65536]
	_ = x[PIPELINE_STAGE_2_VERTEX_INPUT_BIT-4]
	_ = x[PIPELINE_STAGE_2_VERTEX_SHADER_BIT-8]
	_ = x[PIPELINE_STAGE_2_COPY_BIT-4294967296]
	_ = x[PIPELINE_STAGE_2_RESOLVE_BIT-8589934592]
	_ = x[PIPELINE_STAGE_2_BLIT_BIT-17179869184]
	_ = x[PIPELINE_STAGE_2_CLEAR_BIT-34359738368]
	_ = x[PIPELINE_STAGE_2_INDEX_INPUT_BIT-68719476736]
	_ = x[PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT-137438953472]
	_ = x[PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT-274877906944]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT-16]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT-32]
	_ = x[PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT-64]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT-128]
	_ = x[PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT-256]
	_ = x[PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT-512]
	_ = x[PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR-1000024000]
	_ = x[PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI-1000369000]
	_ = x[PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI-1000370000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR-1000386000]
	_ = x[PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT-1000396000]
	_ = x[PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI-1000404000]
	_ = x[PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV-1000464000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR-65536]
	_ = x[PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR-32768]
	_ = x[PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR-4096]
	_ = x[PIPELINE_STAGE_2_TRANSFER_BIT_KHR-4096]
	_ = x[PIPELINE_STAGE_2_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_2_BLIT_BIT_KHR-17179869184]
	_ = x[PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR-8192]
	_ = x[PIPELINE_STAGE_2_CLEAR_BIT_KHR-34359738368]
	_ = x[PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR-1024]
	_ = x[PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR-2048]
	_ = x[PIPELINE_STAGE_2_COPY_BIT_KHR-4294967296]
	_ = x[PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR-2]
	_ = x[PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR-256]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR-128]
	_ = x[PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR-64]
	_ = x[PIPELINE_STAGE_2_HOST_BIT_KHR-16384]
	_ = x[PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR-68719476736]
	_ = x[PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR-512]
	_ = x[PIPELINE_STAGE_2_MESH_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_NONE_KHR-0]
	_ = x[PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR-274877906944]
	_ = x[PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_RESOLVE_BIT_KHR-8589934592]
	_ = x[PIPELINE_STAGE_2_TASK_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR-16]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR-32]
	_ = x[PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR-1]
	_ = x[PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR-137438953472]
	_ = x[PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR-4]
	_ = x[PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR-8]
}

const _PipelineStageFlagBits2_name = "PIPELINE_STAGE_2_NONEPIPELINE_STAGE_2_TOP_OF_PIPE_BITPIPELINE_STAGE_2_DRAW_INDIRECT_BITPIPELINE_STAGE_2_VERTEX_INPUT_BITPIPELINE_STAGE_2_VERTEX_SHADER_BITPIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BITPIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BITPIPELINE_STAGE_2_GEOMETRY_SHADER_BITPIPELINE_STAGE_2_FRAGMENT_SHADER_BITPIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BITPIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BITPIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BITPIPELINE_STAGE_2_COMPUTE_SHADER_BITPIPELINE_STAGE_2_ALL_TRANSFER_BITPIPELINE_STAGE_2_BOTTOM_OF_PIPE_BITPIPELINE_STAGE_2_HOST_BITPIPELINE_STAGE_2_ALL_GRAPHICS_BITPIPELINE_STAGE_2_ALL_COMMANDS_BITPIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHRPIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXTPIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEIPIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEIPIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHRPIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXTPIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEIPIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NVPIPELINE_STAGE_2_COPY_BITPIPELINE_STAGE_2_RESOLVE_BITPIPELINE_STAGE_2_BLIT_BITPIPELINE_STAGE_2_CLEAR_BITPIPELINE_STAGE_2_INDEX_INPUT_BITPIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BITPIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"

var _PipelineStageFlagBits2_map = map[PipelineStageFlagBits2]string{
	0:            _PipelineStageFlagBits2_name[0:21],
	1:            _PipelineStageFlagBits2_name[21:53],
	2:            _PipelineStageFlagBits2_name[53:87],
	4:            _PipelineStageFlagBits2_name[87:120],
	8:            _PipelineStageFlagBits2_name[120:154],
	16:           _PipelineStageFlagBits2_name[154:202],
	32:           _PipelineStageFlagBits2_name[202:253],
	64:           _PipelineStageFlagBits2_name[253:289],
	128:          _PipelineStageFlagBits2_name[289:325],
	256:          _PipelineStageFlagBits2_name[325:366],
	512:          _PipelineStageFlagBits2_name[366:406],
	1024:         _PipelineStageFlagBits2_name[406:450],
	2048:         _PipelineStageFlagBits2_name[450:485],
	4096:         _PipelineStageFlagBits2_name[485:518],
	8192:         _PipelineStageFlagBits2_name[518:553],
	16384:        _PipelineStageFlagBits2_name[553:578],
	32768:        _PipelineStageFlagBits2_name[578:611],
	65536:        _PipelineStageFlagBits2_name[611:644],
	1000024000:   _PipelineStageFlagBits2_name[644:681],
	1000314000:   _PipelineStageFlagBits2_name[681:727],
	1000369000:   _PipelineStageFlagBits2_name[727:770],
	1000370000:   _PipelineStageFlagBits2_name[770:813],
	1000386000:   _PipelineStageFlagBits2_name[813:865],
	1000396000:   _PipelineStageFlagBits2_name[865:904],
	1000404000:   _PipelineStageFlagBits2_name[904:954],
	1000464000:   _PipelineStageFlagBits2_name[954:990],
	4294967296:   _PipelineStageFlagBits2_name[990:1015],
	8589934592:   _PipelineStageFlagBits2_name[1015:1043],
	17179869184:  _PipelineStageFlagBits2_name[1043:1068],
	34359738368:  _PipelineStageFlagBits2_name[1068:1094],
	68719476736:  _PipelineStageFlagBits2_name[1094:1126],
	137438953472: _PipelineStageFlagBits2_name[1126:1169],
	274877906944: _PipelineStageFlagBits2_name[1169:1215],
}

func (i PipelineStageFlagBits2) String() string {
	if str, ok := _PipelineStageFlagBits2_map[i]; ok {
		return str
	}
	return "PipelineStageFlagBits2(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES-0]
	_ = x[POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY-1]
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR-0]
	_ = x[POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR-1]
}

const _PointClippingBehavior_name = "POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANESPOINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY"

var _PointClippingBehavior_index = [...]uint8{0, 39, 84}

func (i PointClippingBehavior) String() string {
	if i < 0 || i >= PointClippingBehavior(len(_PointClippingBehavior_index)-1) {
		return "PointClippingBehavior(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PointClippingBehavior_name[_PointClippingBehavior_index[i]:_PointClippingBehavior_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POLYGON_MODE_FILL-0]
	_ = x[POLYGON_MODE_LINE-1]
	_ = x[POLYGON_MODE_POINT-2]
	_ = x[POLYGON_MODE_FILL_RECTANGLE_NV-1000153000]
}

const (
	_PolygonMode_name_0 = "POLYGON_MODE_FILLPOLYGON_MODE_LINEPOLYGON_MODE_POINT"
	_PolygonMode_name_1 = "POLYGON_MODE_FILL_RECTANGLE_NV"
)

var (
	_PolygonMode_index_0 = [...]uint8{0, 17, 34, 52}
)

func (i PolygonMode) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _PolygonMode_name_0[_PolygonMode_index_0[i]:_PolygonMode_index_0[i+1]]
	case i == 1000153000:
		return _PolygonMode_name_1
	default:
		return "PolygonMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_GRAVITY_MIN_BIT_EXT-1]
	_ = x[PRESENT_GRAVITY_MAX_BIT_EXT-2]
	_ = x[PRESENT_GRAVITY_CENTERED_BIT_EXT-4]
}

const (
	_PresentGravityFlagBitsEXT_name_0 = "PRESENT_GRAVITY_MIN_BIT_EXTPRESENT_GRAVITY_MAX_BIT_EXT"
	_PresentGravityFlagBitsEXT_name_1 = "PRESENT_GRAVITY_CENTERED_BIT_EXT"
)

var (
	_PresentGravityFlagBitsEXT_index_0 = [...]uint8{0, 27, 54}
)

func (i PresentGravityFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PresentGravityFlagBitsEXT_name_0[_PresentGravityFlagBitsEXT_index_0[i]:_PresentGravityFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _PresentGravityFlagBitsEXT_name_1
	default:
		return "PresentGravityFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_MODE_IMMEDIATE_KHR-0]
	_ = x[PRESENT_MODE_MAILBOX_KHR-1]
	_ = x[PRESENT_MODE_FIFO_KHR-2]
	_ = x[PRESENT_MODE_FIFO_RELAXED_KHR-3]
	_ = x[PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR-1000111000]
	_ = x[PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR-1000111001]
}

const (
	_PresentModeKHR_name_0 = "PRESENT_MODE_IMMEDIATE_KHRPRESENT_MODE_MAILBOX_KHRPRESENT_MODE_FIFO_KHRPRESENT_MODE_FIFO_RELAXED_KHR"
	_PresentModeKHR_name_1 = "PRESENT_MODE_SHARED_DEMAND_REFRESH_KHRPRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR"
)

var (
	_PresentModeKHR_index_0 = [...]uint8{0, 26, 50, 71, 100}
	_PresentModeKHR_index_1 = [...]uint8{0, 38, 80}
)

func (i PresentModeKHR) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _PresentModeKHR_name_0[_PresentModeKHR_index_0[i]:_PresentModeKHR_index_0[i+1]]
	case 1000111000 <= i && i <= 1000111001:
		i -= 1000111000
		return _PresentModeKHR_name_1[_PresentModeKHR_index_1[i]:_PresentModeKHR_index_1[i+1]]
	default:
		return "PresentModeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_SCALING_ONE_TO_ONE_BIT_EXT-1]
	_ = x[PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT-2]
	_ = x[PRESENT_SCALING_STRETCH_BIT_EXT-4]
}

const (
	_PresentScalingFlagBitsEXT_name_0 = "PRESENT_SCALING_ONE_TO_ONE_BIT_EXTPRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT"
	_PresentScalingFlagBitsEXT_name_1 = "PRESENT_SCALING_STRETCH_BIT_EXT"
)

var (
	_PresentScalingFlagBitsEXT_index_0 = [...]uint8{0, 34, 78}
)

func (i PresentScalingFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PresentScalingFlagBitsEXT_name_0[_PresentScalingFlagBitsEXT_index_0[i]:_PresentScalingFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _PresentScalingFlagBitsEXT_name_1
	default:
		return "PresentScalingFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRIMITIVE_TOPOLOGY_POINT_LIST-0]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_LIST-1]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_STRIP-2]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_LIST-3]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP-4]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_FAN-5]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY-6]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY-7]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY-8]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY-9]
	_ = x[PRIMITIVE_TOPOLOGY_PATCH_LIST-10]
}

const _PrimitiveTopology_name = "PRIMITIVE_TOPOLOGY_POINT_LISTPRIMITIVE_TOPOLOGY_LINE_LISTPRIMITIVE_TOPOLOGY_LINE_STRIPPRIMITIVE_TOPOLOGY_TRIANGLE_LISTPRIMITIVE_TOPOLOGY_TRIANGLE_STRIPPRIMITIVE_TOPOLOGY_TRIANGLE_FANPRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_PATCH_LIST"

var _PrimitiveTopology_index = [...]uint16{0, 29, 57, 86, 118, 151, 182, 225, 269, 316, 364, 393}

func (i PrimitiveTopology) String() string {
	if i < 0 || i >= PrimitiveTopology(len(_PrimitiveTopology_index)-1) {
		return "PrimitiveTopology(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrimitiveTopology_name[_PrimitiveTopology_index[i]:_PrimitiveTopology_index[i+1]]
}
